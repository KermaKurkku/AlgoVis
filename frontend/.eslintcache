[{"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/index.tsx":"1","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/App.tsx":"2","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/constants.ts":"3","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/listReducer.ts":"4","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Bar.tsx":"5","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/lists.ts":"6","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/actions.ts":"7","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/types.ts":"8","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts":"9","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/types.ts":"10","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/actions.ts":"11","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/SelectedTest.ts":"12","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/index.ts":"13","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/bubbleSortRedux.ts":"14"},{"size":285,"mtime":1609669047044,"results":"15","hashOfConfig":"16"},{"size":1948,"mtime":1609671873255,"results":"17","hashOfConfig":"16"},{"size":53,"mtime":1609589422693,"results":"18","hashOfConfig":"16"},{"size":647,"mtime":1609669080307,"results":"19","hashOfConfig":"16"},{"size":603,"mtime":1609606578979,"results":"20","hashOfConfig":"16"},{"size":262,"mtime":1609603528526,"results":"21","hashOfConfig":"16"},{"size":181,"mtime":1609605160487,"results":"22","hashOfConfig":"16"},{"size":203,"mtime":1609604193061,"results":"23","hashOfConfig":"16"},{"size":824,"mtime":1609669084814,"results":"24","hashOfConfig":"16"},{"size":369,"mtime":1609604921104,"results":"25","hashOfConfig":"16"},{"size":329,"mtime":1609605150517,"results":"26","hashOfConfig":"16"},{"size":656,"mtime":1609669040407,"results":"27","hashOfConfig":"16"},{"size":789,"mtime":1609669131187,"results":"28","hashOfConfig":"16"},{"size":869,"mtime":1609675169600,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1dlfisj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/index.tsx",[],[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/App.tsx",["61","62"],"import React, { useState, useEffect } from 'react'\nimport {\n  Slider,\n  InputNumber,\n  Row,\n  Col,\n} from 'antd'\n\nimport Bar from './Components/Bar'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootState } from './store'\nimport { fetchNewList } from './store/list/listReducer'\n\nimport bubbleSortRedux from './Algorithms/bubbleSortRedux'\n\nconst App: React.FC = () => {\n  const [listSize, setListSize] = useState<number>(25)\n  const [sliderValue, setSliderValue] = useState<number>(25)\n\n\n  const dispatch = useDispatch()\n  const numbers = useSelector((state: RootState) => state.numberList.list)\n  const current = useSelector((state: RootState) => state.currentNumber.current)\n\n\n  useEffect(() => {\n    dispatch(fetchNewList(listSize))\n  }, [listSize])\n\n  const onSliderChange = (value: any) => {\n    if (typeof value !== 'number' || isNaN(Number(value)))\n      return\n    setSliderValue(value)\n  }\n\n  const setNewListSize = (value: any) => {\n    if (typeof value !== 'number')\n      return\n    if (value > 200)\n      value = 200\n    setListSize(value)\n  }\n\n  return (\n    <div>\n      <h1>AlgoVis</h1>\n      <br />\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={3}\n            max={200}\n            onChange={onSliderChange}\n            onAfterChange={setNewListSize}\n            value={typeof sliderValue === 'number' ? sliderValue : 25}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={3}\n            max={200}\n            value={sliderValue}\n            onChange={setNewListSize}\n          />\n        </Col>\n      </Row>\n      <button onClick={bubbleSortRedux}>test</button>\n\n      <h3>{listSize}</h3>\n        \n      <div style={{ display: 'flex' }}>\n          {numbers.map(n => (\n            <Bar key={n} width={100/numbers.length} height={n/listSize} selected={numbers.indexOf(n) === current}/>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/constants.ts",[],[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Bar.tsx",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/lists.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/SelectedTest.ts",["63"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/index.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/bubbleSortRedux.ts",[],{"ruleId":"64","severity":1,"message":"65","line":31,"column":34,"nodeType":"66","messageId":"67","endLine":31,"endColumn":37,"suggestions":"68"},{"ruleId":"64","severity":1,"message":"65","line":37,"column":34,"nodeType":"66","messageId":"67","endLine":37,"endColumn":37,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":36,"nodeType":"66","messageId":"67","endLine":5,"endColumn":39,"suggestions":"70"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["71","72"],["73","74"],["75","76"],{"messageId":"77","fix":"78","desc":"79"},{"messageId":"80","fix":"81","desc":"82"},{"messageId":"77","fix":"83","desc":"79"},{"messageId":"80","fix":"84","desc":"82"},{"messageId":"77","fix":"85","desc":"79"},{"messageId":"80","fix":"86","desc":"82"},"suggestUnknown",{"range":"87","text":"88"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"87","text":"89"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"90","text":"88"},{"range":"90","text":"89"},{"range":"91","text":"88"},{"range":"91","text":"89"},[805,808],"unknown","never",[951,954],[159,162]]
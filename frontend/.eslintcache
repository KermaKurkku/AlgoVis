[{"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx":"1","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx":"2","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts":"3","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx":"4","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx":"5","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts":"6","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts":"7","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts":"8","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts":"9","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts":"10","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx":"11","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts":"12","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts":"13","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts":"14","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts":"15","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts":"16","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts":"17","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts":"18","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts":"19","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts":"20","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts":"21","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/stillRunning.ts":"22"},{"size":285,"mtime":1609855217189,"results":"23","hashOfConfig":"24"},{"size":3624,"mtime":1610112847401,"results":"25","hashOfConfig":"24"},{"size":806,"mtime":1610026740969,"results":"26","hashOfConfig":"24"},{"size":746,"mtime":1610026876340,"results":"27","hashOfConfig":"24"},{"size":1163,"mtime":1610103984426,"results":"28","hashOfConfig":"24"},{"size":340,"mtime":1610026187767,"results":"29","hashOfConfig":"24"},{"size":966,"mtime":1610027800845,"results":"30","hashOfConfig":"24"},{"size":823,"mtime":1610025223482,"results":"31","hashOfConfig":"24"},{"size":1564,"mtime":1610108877196,"results":"32","hashOfConfig":"24"},{"size":57,"mtime":1609944163854,"results":"33","hashOfConfig":"24"},{"size":640,"mtime":1610019534577,"results":"34","hashOfConfig":"24"},{"size":331,"mtime":1610026170387,"results":"35","hashOfConfig":"24"},{"size":262,"mtime":1609855217189,"results":"36","hashOfConfig":"24"},{"size":820,"mtime":1610108861279,"results":"37","hashOfConfig":"24"},{"size":395,"mtime":1610108473356,"results":"38","hashOfConfig":"24"},{"size":433,"mtime":1610108592040,"results":"39","hashOfConfig":"24"},{"size":153,"mtime":1610106741682,"results":"40","hashOfConfig":"24"},{"size":83,"mtime":1610108518906,"results":"41","hashOfConfig":"24"},{"size":1545,"mtime":1610112758553,"results":"42","hashOfConfig":"24"},{"size":948,"mtime":1610112737026,"results":"43","hashOfConfig":"24"},{"size":1136,"mtime":1610115623352,"results":"44","hashOfConfig":"24"},{"size":183,"mtime":1610111946210,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5g5ilw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx",[],[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx",["95","96"],"import React, { useState } from 'react'\nimport {\n  Select,\n  Layout,\n  Typography,\n  Menu,\n  Button\n} from 'antd'\n\nconst { Title } = Typography\nconst { SubMenu } = Menu\nconst { Header, Footer, Sider, Content } = Layout\n\nimport Bars from './Components/Bars'\nimport ListSizeSlider from './Components/ListSizeSlider'\n\nimport stillRunning from './utils/stillRunning'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeCurrent } from './store/currentNumber/currentNumberReducer'\n\n// Figure out webworkers at some point maybe?\n//import SortWorker from 'comlink-loader!./worker'\n\nimport {\n  runAlgorithm,\n  Algorithms,\n  AlgorithmTypes\n} from './services/AlgorithmRunner'\nimport { RootState } from './store'\n\nconst App: React.FC = () => {\n  const algorithmOptions: string[] = Object.values(AlgorithmTypes) as string[]\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<string>(algorithmOptions[0])\n\n  const dispatch = useDispatch()\n\n  const main = useSelector((state: RootState) => state.currentNumber.main)\n\n  const startVisualization = async (): Promise<void> => {\n    \n    const selected: Algorithms =  selectedAlgorithm as Algorithms\n    await runAlgorithm(selected)\n  }\n\n  const stopVisualization = (): void => {\n    console.log('Stop visualizing')\n    dispatch(removeCurrent())\n    setTimeout(() => {\n      stillRunning()\n    }, 20);\n  }\n\n  const menuOnClick = (event: any)  => {\n    console.log(event)\n    setSelectedAlgorithm(event.key)\n  }\n  console.log(stillRunning())\n\n  return (\n    <div>\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">AlgoVis</Menu.Item>\n          </Menu>\n        </Header>\n        <Layout style={{ margin: '0 5em 0 5em'}}>\n          <Sider width={'20%'} className=\"site-layout-background\">\n\n            {main === null ? \n              <Button type='primary' block size='large' style={{\n                  margin: '1em auto',\n                }}\n                onClick={startVisualization}\n              >Visualize</Button> :\n              <Button type='primary' block size='large' style={{\n                  margin: '1em auto'\n                }}\n                onClick={stopVisualization}\n              >Stop visualization</Button>\n            }\n\n            <Title level={2} style={{ color: 'white', margin: '0,5em auto'}}>Select list size</Title>\n\n            <Menu\n              mode=\"inline\"\n              style={{ borderRight: 0 }}\n              defaultOpenKeys={['slider', 'sub2']}\n              defaultSelectedKeys={[algorithmOptions[0]]}\n              onClick={menuOnClick}\n            >\n              <Menu.Item key='slider' title={\n                <p>Select list size</p>\n              }>\n                <ListSizeSlider />\n              </Menu.Item>\n              <SubMenu\n                key='sub2'\n                title=\"Select algorithm\"\n              >\n                {algorithmOptions.map(a => \n                  <Menu.Item key={a} >{a}</Menu.Item>  \n                )}\n              </SubMenu>\n            </Menu>\n            \n          </Sider>\n          <Layout style={{ padding: '0 10em em'}}>\n            <Content className=\"site-layout-background\"\n              style={{\n                padding: 24,\n                margin: 0,\n              }}>\n              <Bars />\n            </Content>\n          </Layout>\n        </Layout>\n        <Footer style={{ textAlign: 'center'}}>AlgoVis algorithm visualizer @2020 Created by Jere Salmensaari</Footer>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx",["97","98","99"],"import React, { useState, useEffect } from 'react'\n\nimport Bar from './Visualization/Bar'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootState, CurrentNumberState } from '../store'\n\nconst Bars: React.FC = () => {\n  const listSize: number = useSelector((state: RootState) => state.numberList.size)\n  const list: number[] = useSelector((state: RootState) => state.numberList.list)\n  const selected: CurrentNumberState = useSelector((state: RootState) => state.currentNumber)\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {list.map((b, i) => (\n        <Bar key={b} width={100/listSize} height={b/listSize}\n        main={i === selected.main} sub={i === selected.sub} />\n      ))}\n    </div>\n  )\n}\n\nexport default Bars","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx",["100","101"],"import React, { useState, useEffect } from 'react'\nimport { Slider } from 'antd'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nimport { fetchNewList, changeListSize } from '../store/list/listReducer'\n\n\nconst ListSizeSlider: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const [sliderValue, setSliderValue] = useState(25)\n  const listSize = useSelector((state: RootState) => state.numberList.size)\n\n\tuseEffect(() => {\n    dispatch(fetchNewList(listSize))\n  }, [listSize])\n\n  const onSliderChange = (value: any) => {\n    if (typeof value !== 'number' || isNaN(Number(value)))\n      return\n    setSliderValue(value)\n  }\n\n  const setNewListSize = (value: any) => {\n    if (typeof value !== 'number')\n      return\n    if (value > 60)\n      value = 60\n    console.log('change list size', value)\n    dispatch(changeListSize(value))\n  }\n\n\treturn (\n\t\t<div>\n\t\t\t<Slider\n\t\t\t\tmin={3}\n        max={60}\n        onChange={onSliderChange}\n        onAfterChange={setNewListSize}\n        value={typeof sliderValue === 'number' ? sliderValue : 25}\n        tipFormatter={null}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default ListSizeSlider","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts",["102"],"import {\n  BubbleSort,\n  QuickSort,\n  BogoSort,\n  Algorithms\n} from './types'\n\nimport {\n  quickSort,\n  bubbleSort,\n  bogoSort\n} from '../../Algorithms'\n\nexport const runAlgorithm = async (type: Algorithms) => {\n  console.log(type)\n  switch (type) {\n    case BubbleSort:\n      return await bubbleSort()\n    case QuickSort:\n      return await quickSort()\n    case BogoSort:\n      return await bogoSort()\n    default:\n      return\n  }\n}","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/stillRunning.ts",[],{"ruleId":"103","severity":1,"message":"104","line":3,"column":3,"nodeType":"105","messageId":"106","endLine":3,"endColumn":9},{"ruleId":"107","severity":1,"message":"108","line":54,"column":31,"nodeType":"109","messageId":"110","endLine":54,"endColumn":34,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"113","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"114","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":20,"column":34,"nodeType":"109","messageId":"110","endLine":20,"endColumn":37,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"108","line":26,"column":34,"nodeType":"109","messageId":"110","endLine":26,"endColumn":37,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":14,"column":29,"nodeType":"119","messageId":"120","endLine":14,"endColumn":56},"@typescript-eslint/no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["121","122"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.",["123","124"],["125","126"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",{"messageId":"127","fix":"128","desc":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"127","fix":"133","desc":"129"},{"messageId":"130","fix":"134","desc":"132"},{"messageId":"127","fix":"135","desc":"129"},{"messageId":"130","fix":"136","desc":"132"},"suggestUnknown",{"range":"137","text":"138"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"137","text":"139"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"140","text":"138"},{"range":"140","text":"139"},{"range":"141","text":"138"},{"range":"141","text":"139"},[1398,1401],"unknown","never",[562,565],[708,711]]
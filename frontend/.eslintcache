[{"/home/jere/Documents/fullstack_open/Algovis/frontend/src/index.tsx":"1","/home/jere/Documents/fullstack_open/Algovis/frontend/src/App.tsx":"2","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/list/listReducer.ts":"3","/home/jere/Documents/fullstack_open/Algovis/frontend/src/Components/Bar.tsx":"4","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/list/types.ts":"5","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/list/actions.ts":"6","/home/jere/Documents/fullstack_open/Algovis/frontend/src/services/lists.ts":"7","/home/jere/Documents/fullstack_open/Algovis/frontend/src/constants.ts":"8","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/index.ts":"9","/home/jere/Documents/fullstack_open/Algovis/frontend/src/Algorithms/bubbleSortRedux.ts":"10","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/currentNumber/actions.ts":"11","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/currentNumber/currentNumberReducer.ts":"12","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/currentNumber/types.ts":"13","/home/jere/Documents/fullstack_open/Algovis/frontend/src/Algorithms/index.ts":"14","/home/jere/Documents/fullstack_open/Algovis/frontend/src/Algorithms/quickSortRedux.ts":"15"},{"size":285,"mtime":1609688835937,"results":"16","hashOfConfig":"17"},{"size":1926,"mtime":1609696801525,"results":"18","hashOfConfig":"17"},{"size":647,"mtime":1609688835937,"results":"19","hashOfConfig":"17"},{"size":603,"mtime":1609688835937,"results":"20","hashOfConfig":"17"},{"size":203,"mtime":1609688835937,"results":"21","hashOfConfig":"17"},{"size":181,"mtime":1609688835937,"results":"22","hashOfConfig":"17"},{"size":262,"mtime":1609688835937,"results":"23","hashOfConfig":"17"},{"size":53,"mtime":1609338813473,"results":"24","hashOfConfig":"17"},{"size":745,"mtime":1609698838232,"results":"25","hashOfConfig":"17"},{"size":868,"mtime":1609696311304,"results":"26","hashOfConfig":"17"},{"size":329,"mtime":1609689704868,"results":"27","hashOfConfig":"17"},{"size":824,"mtime":1609689704868,"results":"28","hashOfConfig":"17"},{"size":369,"mtime":1609689704868,"results":"29","hashOfConfig":"17"},{"size":66,"mtime":1609696793132,"results":"30","hashOfConfig":"17"},{"size":1506,"mtime":1609698857096,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"2qth77",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jere/Documents/fullstack_open/Algovis/frontend/src/index.tsx",[],[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/App.tsx",["64","65"],"import React, { useState, useEffect } from 'react'\nimport {\n  Slider,\n  InputNumber,\n  Row,\n  Col,\n} from 'antd'\n\nimport Bar from './Components/Bar'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootState } from './store'\nimport { fetchNewList } from './store/list/listReducer'\n\nimport {\n  quickSort\n} from './Algorithms'\n\nconst App: React.FC = () => {\n  const [listSize, setListSize] = useState<number>(25)\n  const [sliderValue, setSliderValue] = useState<number>(25)\n\n\n  const dispatch = useDispatch()\n  const numbers = useSelector((state: RootState) => state.numberList.list)\n  const current = useSelector((state: RootState) => state.currentNumber.current)\n\n\n  useEffect(() => {\n    dispatch(fetchNewList(listSize))\n  }, [listSize])\n\n  const onSliderChange = (value: any) => {\n    if (typeof value !== 'number' || isNaN(Number(value)))\n      return\n    setSliderValue(value)\n  }\n\n  const setNewListSize = (value: any) => {\n    if (typeof value !== 'number')\n      return\n    if (value > 200)\n      value = 200\n    setListSize(value)\n  }\n\n  return (\n    <div>\n      <h1>AlgoVis</h1>\n      <br />\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={3}\n            max={200}\n            onChange={onSliderChange}\n            onAfterChange={setNewListSize}\n            value={typeof sliderValue === 'number' ? sliderValue : 25}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={3}\n            max={200}\n            value={sliderValue}\n            onChange={setNewListSize}\n          />\n        </Col>\n      </Row>\n      <button onClick={quickSort}>test</button>\n\n      <h3>{listSize}</h3>\n        \n      <div style={{ display: 'flex' }}>\n          {numbers.map(n => (\n            <Bar key={n} width={100/numbers.length} height={n/listSize} selected={numbers.indexOf(n) === current}/>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/Components/Bar.tsx",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/services/lists.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/constants.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/index.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/Algorithms/bubbleSortRedux.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/currentNumber/currentNumberReducer.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/Algorithms/index.ts",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/Algorithms/quickSortRedux.ts",["66","67"],{"ruleId":"68","severity":1,"message":"69","line":33,"column":34,"nodeType":"70","messageId":"71","endLine":33,"endColumn":37,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":39,"column":34,"nodeType":"70","messageId":"71","endLine":39,"endColumn":37,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":28,"nodeType":"76","messageId":"77","endLine":1,"endColumn":47},{"ruleId":"74","severity":1,"message":"78","line":44,"column":9,"nodeType":"76","messageId":"77","endLine":44,"endColumn":13},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["79","80"],["81","82"],"@typescript-eslint/no-unused-vars","'removeCurrentAction' is defined but never used.","Identifier","unusedVar","'list' is assigned a value but never used.",{"messageId":"83","fix":"84","desc":"85"},{"messageId":"86","fix":"87","desc":"88"},{"messageId":"83","fix":"89","desc":"85"},{"messageId":"86","fix":"90","desc":"88"},"suggestUnknown",{"range":"91","text":"92"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"91","text":"93"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"94","text":"92"},{"range":"94","text":"93"},[789,792],"unknown","never",[935,938]]
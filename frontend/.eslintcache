[{"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/index.tsx":"1","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/App.tsx":"2","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/index.ts":"3","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/running/runningReducer.ts":"4","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/list/listReducer.ts":"5","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/Bars.tsx":"6","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/ListSizeSlider.tsx":"7","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/list/types.ts":"8","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/running/types.ts":"9","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts":"10","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/currentNumber/types.ts":"11","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/hooks/index.ts":"12","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/running/actions.ts":"13","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/list/actions.ts":"14","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/lists.ts":"15","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts":"16","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/Visualization/Bar.tsx":"17","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx":"18","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/currentNumber/actions.ts":"19","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts":"20","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts":"21","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/constants.ts":"22","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/utils/index.ts":"23","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts":"24","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/index.ts":"25","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/stalinSort.ts":"26","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/mergeSort.ts":"27","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/insertionSort.ts":"28","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/bogoSort.ts":"29","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/quickSort.ts":"30","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/bubbleSort.ts":"31","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/index.tsx":"32","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/App.tsx":"33","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/index.ts":"34","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/running/runningReducer.ts":"35","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/listReducer.ts":"36","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Bars.tsx":"37","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/ListSizeSlider.tsx":"38","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/types.ts":"39","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/running/types.ts":"40","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts":"41","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/types.ts":"42","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/running/actions.ts":"43","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/actions.ts":"44","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/hooks/index.ts":"45","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/lists.ts":"46","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts":"47","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx":"48","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Visualization/Bar.tsx":"49","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/actions.ts":"50","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/constants.ts":"51","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts":"52","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts":"53","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/utils/index.ts":"54","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts":"55","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/index.ts":"56","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/mergeSort.ts":"57","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/stalinSort.ts":"58","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/insertionSort.ts":"59","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/bogoSort.ts":"60","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/quickSort.ts":"61","/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/bubbleSort.ts":"62"},{"size":285,"mtime":1612610813202,"results":"63","hashOfConfig":"64"},{"size":4199,"mtime":1612610813202,"results":"65","hashOfConfig":"64"},{"size":929,"mtime":1612610813202,"results":"66","hashOfConfig":"64"},{"size":1008,"mtime":1612610813202,"results":"67","hashOfConfig":"64"},{"size":929,"mtime":1612610813202,"results":"68","hashOfConfig":"64"},{"size":1507,"mtime":1612610813202,"results":"69","hashOfConfig":"64"},{"size":1308,"mtime":1612610813202,"results":"70","hashOfConfig":"64"},{"size":342,"mtime":1612610813202,"results":"71","hashOfConfig":"64"},{"size":545,"mtime":1612610813202,"results":"72","hashOfConfig":"64"},{"size":1506,"mtime":1612610813202,"results":"73","hashOfConfig":"64"},{"size":825,"mtime":1612610813202,"results":"74","hashOfConfig":"64"},{"size":1100,"mtime":1612610813202,"results":"75","hashOfConfig":"64"},{"size":509,"mtime":1612610813202,"results":"76","hashOfConfig":"64"},{"size":324,"mtime":1612610813202,"results":"77","hashOfConfig":"64"},{"size":261,"mtime":1612610813202,"results":"78","hashOfConfig":"64"},{"size":57,"mtime":1612610813202,"results":"79","hashOfConfig":"64"},{"size":1161,"mtime":1612613202107,"results":"80","hashOfConfig":"64"},{"size":2324,"mtime":1612610813202,"results":"81","hashOfConfig":"64"},{"size":820,"mtime":1612610813202,"results":"82","hashOfConfig":"64"},{"size":585,"mtime":1612610813202,"results":"83","hashOfConfig":"64"},{"size":569,"mtime":1612610813202,"results":"84","hashOfConfig":"64"},{"size":219,"mtime":1612611147361,"results":"85","hashOfConfig":"64"},{"size":423,"mtime":1612610813202,"results":"86","hashOfConfig":"64"},{"size":734,"mtime":1612610813202,"results":"87","hashOfConfig":"64"},{"size":172,"mtime":1612610813202,"results":"88","hashOfConfig":"64"},{"size":1061,"mtime":1612610813202,"results":"89","hashOfConfig":"64"},{"size":2164,"mtime":1612610813202,"results":"90","hashOfConfig":"64"},{"size":1254,"mtime":1612610813202,"results":"91","hashOfConfig":"64"},{"size":1202,"mtime":1612610813202,"results":"92","hashOfConfig":"64"},{"size":1727,"mtime":1612610813202,"results":"93","hashOfConfig":"64"},{"size":1207,"mtime":1612610813202,"results":"94","hashOfConfig":"64"},{"size":285,"mtime":1609669047044,"results":"95","hashOfConfig":"96"},{"size":4199,"mtime":1612605720151,"results":"97","hashOfConfig":"96"},{"size":929,"mtime":1610437831433,"results":"98","hashOfConfig":"96"},{"size":1008,"mtime":1610609236540,"results":"99","hashOfConfig":"96"},{"size":929,"mtime":1610609236540,"results":"100","hashOfConfig":"96"},{"size":1478,"mtime":1612616353020,"results":"101","hashOfConfig":"96"},{"size":1308,"mtime":1612605720151,"results":"102","hashOfConfig":"96"},{"size":342,"mtime":1610609236540,"results":"103","hashOfConfig":"96"},{"size":545,"mtime":1610609236540,"results":"104","hashOfConfig":"96"},{"size":1767,"mtime":1612616310270,"results":"105","hashOfConfig":"96"},{"size":1036,"mtime":1612616196153,"results":"106","hashOfConfig":"96"},{"size":509,"mtime":1610609236540,"results":"107","hashOfConfig":"96"},{"size":324,"mtime":1610609236540,"results":"108","hashOfConfig":"96"},{"size":1100,"mtime":1612605720151,"results":"109","hashOfConfig":"96"},{"size":261,"mtime":1610609236540,"results":"110","hashOfConfig":"96"},{"size":57,"mtime":1610437831433,"results":"111","hashOfConfig":"96"},{"size":2324,"mtime":1612613580522,"results":"112","hashOfConfig":"96"},{"size":1183,"mtime":1612618451056,"results":"113","hashOfConfig":"96"},{"size":1012,"mtime":1612616199793,"results":"114","hashOfConfig":"96"},{"size":219,"mtime":1612605720151,"results":"115","hashOfConfig":"96"},{"size":569,"mtime":1612605720151,"results":"116","hashOfConfig":"96"},{"size":585,"mtime":1612605720151,"results":"117","hashOfConfig":"96"},{"size":423,"mtime":1612605720151,"results":"118","hashOfConfig":"96"},{"size":734,"mtime":1612613580525,"results":"119","hashOfConfig":"96"},{"size":172,"mtime":1612605720151,"results":"120","hashOfConfig":"96"},{"size":2366,"mtime":1612618886522,"results":"121","hashOfConfig":"96"},{"size":1061,"mtime":1612605720151,"results":"122","hashOfConfig":"96"},{"size":1254,"mtime":1612605720151,"results":"123","hashOfConfig":"96"},{"size":1202,"mtime":1612605720151,"results":"124","hashOfConfig":"96"},{"size":1756,"mtime":1612616890424,"results":"125","hashOfConfig":"96"},{"size":1207,"mtime":1612605720151,"results":"126","hashOfConfig":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"14do81a",{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"129"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"129"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"129"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"129"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"129"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"129"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"129"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"129"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"129"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"129"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"shqhgg",{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/index.tsx",[],[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/App.tsx",["262"],"import React, { useState, useRef} from 'react'\nimport {\n  Layout,\n  Typography,\n  Menu,\n  Button,\n  Skeleton,\n  Divider\n} from 'antd'\n\nconst { Title } = Typography\nconst { Header, Footer, Sider, Content } = Layout\n\nimport Bars from './Components/Bars'\nimport ListSizeSlider from './Components/ListSizeSlider'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setStopped, setRunning, setWaiting } from './store/running/runningReducer'\n\n// Figure out webworkers at some point maybe?\n//import SortWorker from 'comlink-loader!./worker'\n\nimport {\n  runAlgorithm,\n  Algorithms,\n  AlgorithmTypes\n} from './services/AlgorithmRunner'\nimport { RootState } from './store'\nimport { fetchNewList } from './store/list/listReducer'\nimport { useContainerDimensions } from './hooks'\n\nconst App: React.FC = () => {\n  const algorithmOptions: string[] = Object.values(AlgorithmTypes) as string[]\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<string>(algorithmOptions[0])\n\n  const componentRef = useRef<HTMLDivElement>(null)\n  const { width } = useContainerDimensions(componentRef)\n\n  const dispatch = useDispatch()\n\n  const running = useSelector((state: RootState) => state.running)\n  const listSize = useSelector((state: RootState) => state.numberList.size)\n\n  const startVisualization = async (): Promise<void> => {\n    if (running === 'finished')\n      await dispatch(fetchNewList(listSize))\n\n    dispatch(setRunning())\n    const selected: Algorithms =  selectedAlgorithm as Algorithms\n    await runAlgorithm(selected)\n  }\n\n  const stopVisualization = (): void => {\n    dispatch(setStopped())\n    \n  }\n\n  const menuOnClick = (event: any)  => {\n    const checkIfNotWaiting = async () => {\n      if (running !== 'waiting') {\n        await dispatch(fetchNewList(listSize))\n        dispatch(setWaiting())\n      }\n    }\n\n    checkIfNotWaiting()\n\n    setSelectedAlgorithm(event.key)\n  }\n\n  return (\n    <div>\n      <Layout>\n        <Header className='header'>\n          <div />\n          <Menu theme='dark' mode='horizontal' defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">AlgoVis</Menu.Item>\n          </Menu>\n        </Header>\n        <Layout style={{ margin: '0 5em 0 5em' }}>\n          <Sider width={'20%'} className='site-layout-background' theme='light'>\n\n\n\n            <Title level={2} style={{ margin: '0,5em auto', padding: '0.2em 1em' }}>Select list size</Title>\n            <ListSizeSlider />\n            {running === 'stopped' || running === 'finished' || running === 'waiting' ?\n              <Button type='primary' block size='large' style={{\n                margin: '1em auto',\n              }}\n              onClick={startVisualization}\n              >Visualize</Button> :\n              <Button type='primary' block size='large' style={{\n                margin: '1em auto'\n              }}\n              onClick={stopVisualization}\n              >Stop visualization</Button>\n            }\n            <Divider>Select sorting algorithm</Divider>\n            {/*Menu for selecting sorting algorithm*/}\n            <Menu\n              mode=\"inline\"\n              style={{ borderRight: 0 }}\n              defaultOpenKeys={['slider', 'sub2']}\n              defaultSelectedKeys={[algorithmOptions[0]]}\n              onClick={menuOnClick}\n            >\n              {algorithmOptions.map(a =>\n                <Menu.Item\n                  key={a}\n                  disabled={running === 'running' ? true : false}\n                >{a}</Menu.Item>\n              )}\n            </Menu>\n\n          </Sider>\n          <Layout style={{ padding: '0 10em em' }}>\n            <Content className=\"site-layout-content\" id='container'\n                style={{\n                  padding: 24,\n                  margin: 0,\n                }}\n              >\n              <div ref={componentRef}>\n                <Bars componentWidth={width} />\n                <Divider />\n                <Skeleton />\n                <Skeleton />\n              </div>\n            </Content>\n          </Layout>\n        </Layout>\n        <Footer style={{ textAlign: 'center' }}>AlgoVis algorithm visualizer @2020 Created by Jere Salmensaari</Footer>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/index.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/running/runningReducer.ts",["263"],"import {\n  RunningStateAction,\n  runningType,\n  SET_RUNNING,\n  SET_STOPPED,\n  SET_FINISHED,\n  SET_WAITING\n} from './types'\nimport {\n  setRunningAction,\n  setStoppedAction,\n  setFinishedAction,\n  setWaitingAction\n} from './actions'\n\nimport { AppType } from '..'\n\nconst initialState: runningType = 'waiting'\n\nexport const setRunning = (): AppType => async dispatch => {\n  dispatch(setRunningAction())\n}\n\nexport const setStopped = (): AppType => async dispatch => {\n  dispatch(setStoppedAction())\n}\n\nexport const setFinished = (): AppType => async dispatch => {\n  dispatch(setFinishedAction())\n}\n\nexport const setWaiting = (): AppType => async dispatch => {\n  dispatch(setWaitingAction())\n}\n\nconst reducer = (state = initialState, action: RunningStateAction) => {\n  switch (action.type){\n  case SET_RUNNING:\n    return 'running'\n  case SET_STOPPED:\n    return 'stopped'\n  case SET_FINISHED:\n    return 'finished'\n  case SET_WAITING:\n    return 'waiting'\n  default:\n    return state\n  }\n}\n\nexport default reducer","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/Bars.tsx",["264","265"],"import React, { useState, useEffect, createRef } from 'react'\n\nimport Bar from './Visualization/Bar'\n\nimport { useSelector } from 'react-redux'\n\nimport { RootState, CurrentNumberState } from '../store'\n\nimport AnimateBars from './Visualization/AnimateBars'\n\ninterface Props {\n  componentWidth: number;\n}\n\n// wery much in progress\n// Maybe\n// https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba\n// https://codesandbox.io/s/reorder-elements-with-slide-transition-and-react-hooks-flip-211f2?from-embed\nconst Bars: React.FC<Props> = ({componentWidth}: { componentWidth: number } ) => {\n  const listSize: number = useSelector((state: RootState) => state.numberList.size)\n  const list: number[] = useSelector((state: RootState) => state.numberList.list)\n  const selected: CurrentNumberState = useSelector((state: RootState) => state.currentNumber)\n  \n  const width: number = 100/listSize * componentWidth/listSize \n\n  const area = {\n    start: 1,\n    end: 5\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <AnimateBars>\n        {\n          list.map((b, i) => {\n            const barRef = createRef<HTMLDivElement>()\n            return <Bar key={b} width={width} height={b/listSize} area={i >= area.start && i <= area.end}\n            // Fix types here\n            // @ts-expect-error\n              main={i === selected.main} sub={i === selected.sub} ref={barRef} // Ref is null for some reason\n            />\n        })}\n      </AnimateBars>\n    </div>\n  )\n}\n\nexport default Bars","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/ListSizeSlider.tsx",["266","267"],"import React, { useState, useEffect } from 'react'\nimport { Slider } from 'antd'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nimport { fetchNewList, changeListSize } from '../store/list/listReducer'\n\nimport { isRunning } from '../utils'\nimport { setWaiting } from '../store/running/runningReducer'\n\n\nconst ListSizeSlider: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const [sliderValue, setSliderValue] = useState(20)\n  const listSize = useSelector((state: RootState) => state.numberList.size)\n\n  useEffect(() => {\n    dispatch(fetchNewList(listSize))\n    dispatch(setWaiting())\n  }, [listSize])\n\n  const onSliderChange = (value: any) => {\n    if (typeof value !== 'number' || isNaN(Number(value)))\n      return\n    setSliderValue(value)\n  }\n\n  const setNewListSize = (value: any) => {\n    if (typeof value !== 'number')\n      return\n    if (value > 40)\n      value = 40\n    dispatch(changeListSize(value))\n  }\n\n  return (\n    <div>\n      <Slider\n        min={3}\n        max={40}\n        onChange={onSliderChange}\n        onAfterChange={setNewListSize}\n        value={typeof sliderValue === 'number' ? sliderValue : 20}\n        tipFormatter={null}\n        disabled={isRunning() === 'running'}\n      />\n    </div>\n  )\n}\n\nexport default ListSizeSlider","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/running/types.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/hooks/index.ts",["268","269","270"],"import { useState, useEffect, useRef} from 'react'\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport const useContainerDimensions = (myRef: React.MutableRefObject<HTMLDivElement | null>): Dimensions => {\n  const getDimensions = (): Dimensions => ({\n    width: myRef.current?.offsetWidth || 0,\n    height: myRef.current?.offsetHeight || 0\n  })\n\n  const [dimensions, setDimensions] = useState<Dimensions>({ width: 0, height: 0 })\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions(getDimensions())\n    }\n\n    if (myRef.current)\n      setDimensions(getDimensions())\n\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [myRef])\n\n  return dimensions\n\n}\n\n// https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n// Used to get the previous value of an object\nexport const usePrevious = (value: any): any => {\n  const prevChildrenRef = useRef()\n\n  useEffect(() => {\n    prevChildrenRef.current = value\n  }, [value])\n\n  return prevChildrenRef.current\n}","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/running/actions.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/lists.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/Visualization/Bar.tsx",["271"],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx",["272","273","274"],"\n/*\n  Based on https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba by Tara Ojo\n  Used to animate changing bar positions\n*/\n\nimport React, { useState, useEffect, useLayoutEffect, ReactChildren } from 'react'\nimport { usePrevious } from '../../hooks'\nimport calculateBoundingBoxes from '../../utils/calculateBoundingBoxes'\n\nimport { AnimationChild, DOMRectDict } from '../../types'\n\nconst AnimateBars: React.FC<any> = ({ children }: { children: any}) => {\n  const [boundingBox, setBoundingBox] = useState<DOMRectDict | null>({})\n  const [prevBoundingBox, setPrevBoundingBox] = useState<DOMRectDict | null>({})\n  const prevChildren = usePrevious(children)\n\n  // Fix bounding boxes updating when list size updates\n  useLayoutEffect(() => {\n    const newBoundingBox = calculateBoundingBoxes(children)\n    setBoundingBox(newBoundingBox)\n  }, [children])\n\n  useLayoutEffect(() => {\n    const prevBoundingBox = calculateBoundingBoxes(prevChildren)\n    setPrevBoundingBox(prevBoundingBox)\n  }, [prevChildren])\n\n  useEffect(() => {\n    if (!prevBoundingBox || !boundingBox || Object.keys(prevBoundingBox).length < Object.keys(boundingBox).length)\n      return\n\n    const hasPrevBoundingBox = Object.keys(prevBoundingBox).length\n\n    if (hasPrevBoundingBox) {\n      React.Children.forEach(children, (child: AnimationChild) => {\n        const domNode = child.ref.current\n        const firstBox = prevBoundingBox[child.key]\n        const lastBox = boundingBox[child.key]\n        if (!firstBox || !lastBox)\n          return\n\n        const changeInX = firstBox.left - lastBox.left\n\n\n        if (changeInX) {\n          requestAnimationFrame(() => {\n            // Before DOM paints, invert child to old position\n            // Maybe longer animation time?\n            // Reduce speed of sorting so the animation shows\n            domNode.style.transform = `translateX(${changeInX}px)`\n            domNode.style.transition = `transform 0ms`\n\n            requestAnimationFrame(() => {\n              // After previous frame, remove the transition to play the animation\n              domNode.style.transform = ''\n              domNode.style.transition = 'transform 200ms'\n            })\n          })\n        }\n      })\n    }\n  }, [boundingBox, prevBoundingBox, children])\n\n  return children\n\n}\n\nexport default AnimateBars\n","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts",["275"],"import {\n  BubbleSort,\n  QuickSort,\n  BogoSort,\n  InsertionSort,\n  StalinSort,\n  MergeSort,\n  Algorithms\n} from './types'\n\nimport * as a from '../../Algorithms'\n\nexport const runAlgorithm = async (type: Algorithms) => {\n  switch (type) {\n  case BubbleSort:\n    return await a.bubbleSort()\n  case QuickSort:\n    return await a.quickSort()\n  case BogoSort:\n    return await a.bogoSort()\n  case InsertionSort:\n    return await a.insertionSort()\n  case StalinSort:\n    return await a.stalinSort()\n  case MergeSort:\n    return await a.mergeSort()\n  default:\n    return\n  }\n}","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/constants.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/utils/index.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts",["276"],"/*\n  Based on https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba by Tara Ojo\n  Calculates the bounding boxes of elements given to it\n*/\n\nimport React, { ReactChildren } from 'react'\n\nimport { AnimationChild, AnimationChildren, DOMRectDict } from '../types'\n\nconst calculateBoundingBoxes = (children: AnimationChildren): DOMRectDict | null => {\n  const boundingBoxes: DOMRectDict = {}\n\n  React.Children.forEach(children, (child: AnimationChild) => {\n    if (!child.ref.current)\n      return null\n    const domNode = child.ref.current\n    const nodeBoundingBox = domNode.getBoundingClientRect()\n\n\n    boundingBoxes[child.key] = nodeBoundingBox\n  })\n\n  return boundingBoxes\n}\n\nexport default calculateBoundingBoxes","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/index.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/stalinSort.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/mergeSort.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/insertionSort.ts",[],"/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/bogoSort.ts",["277"],"import { setMainAction, removeCurrentAction, removeSubAction } from '../store/currentNumber/actions'\nimport { setFinishedAction } from '../store/running/actions'\n\nimport { setNewAction } from '../store/list/actions'\n\nimport listService from '../services/lists'\n\nimport store from '../store'\n\nimport { isRunning, wait } from '../utils'\n\nimport _ from 'lodash'\nimport { baseDelay } from '../constants'\n\n\nconst sort = async (): Promise<void> => {\n  const list: number[] = [...store.getState().numberList.list]\n  const listSize: number = store.getState().numberList.size\n  let rerun = false\n\n  for (let i = 0; i < listSize - 1; i++) {\n    await wait(baseDelay)\n    if (isRunning() === 'stopped')\n      return\n    store.dispatch(setMainAction(i))\n    if (list[i] > list[i + 1]) {\n      rerun = !rerun\n      break\n    }\n  }\n\n  if (rerun) {\n    store.dispatch(setNewAction(_.shuffle(list)))\n    store.dispatch(setMainAction(-1))\n    await wait(300)\n    return await sort()\n  }\n  store.dispatch(setFinishedAction())\n  return\n}\n\nexport const bogoSort = async (): Promise<void> => {\n  store.dispatch(setMainAction(-1))\n  await sort()\n  store.dispatch(removeCurrentAction())\n  store.dispatch(removeSubAction())\n\n}","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/quickSort.ts",["278"],"import { setMainAction, setSubAction, removeCurrentAction, removeSubAction } from '../store/currentNumber/actions'\nimport { setNewAction } from '../store/list/actions'\nimport { setFinishedAction } from '../store/running/actions'\n\nimport store from '../store'\n\nimport { isRunning, wait } from '../utils'\nimport { baseDelay } from '../constants'\nimport { removeSub } from '../store/currentNumber/currentNumberReducer'\n\nconst partition = async (A: number[], low: number, high: number): Promise<number> => {\n  const list: number[] = [...A]\n  const pivot: number = list[high]\n  store.dispatch(setMainAction(high))\n  let i = low\n\n  if (!pivot)\n    return -1\n  for (let j = low; j < high; j++) {\n    if (isRunning() === 'stopped')\n      return -1\n    store.dispatch(setSubAction(j))\n\n    await wait(baseDelay) // Wait for given amount of ms\n\n    if (list[j] < pivot) {\n      [list[i], list[j]] = [list[j], list[i]]\n      store.dispatch(setNewAction(list))\n      i++\n    }\n  }\n  [list[i], list[high]] = [list[high], list[i]]\n  store.dispatch(setNewAction(list))\n  return i\n}\n\nconst sort = async (low: number, high: number): Promise<void> => {\n  if (isRunning() === 'stopped')\n    return\n\n  const list = [...store.getState().numberList.list]\n  if (low < high) {\n    const p: number = await partition(list, low, high)\n\n    if (p === -1)\n      return\n    await sort(low, p - 1)\n    await sort(p + 1, high)\n  }\n\n}\n\nexport const quickSort = async (): Promise<void> => {\n  const list = [...store.getState().numberList.list]\n  store.dispatch(setMainAction(-1))\n  await sort(0, list.length-1)\n  store.dispatch(removeCurrentAction())\n  store.dispatch(removeSubAction())\n  if (isRunning() === 'running')\n    store.dispatch(setFinishedAction())\n}","/home/jere/Documents/FullStack-Open/Algovis-temp/AlgoVis/frontend/src/Algorithms/bubbleSort.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/index.tsx",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/App.tsx",["279"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/index.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/running/runningReducer.ts",["280"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Bars.tsx",["281","282"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/ListSizeSlider.tsx",["283","284"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/running/types.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts",["285"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/running/actions.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/hooks/index.ts",["286","287","288"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/lists.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx",["289","290","291"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Components/Visualization/Bar.tsx",["292"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/constants.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts",["293"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/utils/index.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts",["294"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/index.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/mergeSort.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/stalinSort.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/insertionSort.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/bogoSort.ts",["295"],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/quickSort.ts",[],"/home/jere/Documents/FullStack-Open/AlgoVis/frontend/src/Algorithms/bubbleSort.ts",[],{"ruleId":"296","severity":1,"message":"297","line":58,"column":31,"nodeType":"298","messageId":"299","endLine":58,"endColumn":34,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":36,"column":17,"nodeType":"303","messageId":"304","endLine":36,"endColumn":70},{"ruleId":"305","severity":1,"message":"306","line":1,"column":17,"nodeType":"307","messageId":"308","endLine":1,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":1,"column":27,"nodeType":"307","messageId":"308","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":24,"column":34,"nodeType":"298","messageId":"299","endLine":24,"endColumn":37,"suggestions":"310"},{"ruleId":"296","severity":1,"message":"297","line":30,"column":34,"nodeType":"298","messageId":"299","endLine":30,"endColumn":37,"suggestions":"311"},{"ruleId":"301","severity":1,"message":"312","line":37,"column":29,"nodeType":"307","messageId":"313","endLine":37,"endColumn":39},{"ruleId":"296","severity":1,"message":"297","line":37,"column":36,"nodeType":"298","messageId":"299","endLine":37,"endColumn":39,"suggestions":"314"},{"ruleId":"296","severity":1,"message":"297","line":37,"column":42,"nodeType":"298","messageId":"299","endLine":37,"endColumn":45,"suggestions":"315"},{"ruleId":"305","severity":1,"message":"316","line":1,"column":17,"nodeType":"307","messageId":"308","endLine":1,"endColumn":33},{"ruleId":"305","severity":1,"message":"317","line":7,"column":55,"nodeType":"307","messageId":"308","endLine":7,"endColumn":68},{"ruleId":"296","severity":1,"message":"297","line":13,"column":29,"nodeType":"298","messageId":"299","endLine":13,"endColumn":32,"suggestions":"318"},{"ruleId":"296","severity":1,"message":"297","line":13,"column":63,"nodeType":"298","messageId":"299","endLine":13,"endColumn":66,"suggestions":"319"},{"ruleId":"301","severity":1,"message":"302","line":13,"column":29,"nodeType":"303","messageId":"304","endLine":13,"endColumn":56},{"ruleId":"305","severity":1,"message":"317","line":6,"column":17,"nodeType":"307","messageId":"308","endLine":6,"endColumn":30},{"ruleId":"305","severity":1,"message":"320","line":6,"column":8,"nodeType":"307","messageId":"308","endLine":6,"endColumn":19},{"ruleId":"305","severity":1,"message":"321","line":9,"column":10,"nodeType":"307","messageId":"308","endLine":9,"endColumn":19},{"ruleId":"296","severity":1,"message":"297","line":58,"column":31,"nodeType":"298","messageId":"299","endLine":58,"endColumn":34,"suggestions":"322"},{"ruleId":"301","severity":1,"message":"302","line":36,"column":17,"nodeType":"303","messageId":"304","endLine":36,"endColumn":70},{"ruleId":"305","severity":1,"message":"306","line":1,"column":17,"nodeType":"307","messageId":"308","endLine":1,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":1,"column":27,"nodeType":"307","messageId":"308","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":24,"column":34,"nodeType":"298","messageId":"299","endLine":24,"endColumn":37,"suggestions":"323"},{"ruleId":"296","severity":1,"message":"297","line":30,"column":34,"nodeType":"298","messageId":"299","endLine":30,"endColumn":37,"suggestions":"324"},{"ruleId":"305","severity":1,"message":"325","line":17,"column":3,"nodeType":"307","messageId":"308","endLine":17,"endColumn":16},{"ruleId":"301","severity":1,"message":"312","line":37,"column":29,"nodeType":"307","messageId":"313","endLine":37,"endColumn":39},{"ruleId":"296","severity":1,"message":"297","line":37,"column":36,"nodeType":"298","messageId":"299","endLine":37,"endColumn":39,"suggestions":"326"},{"ruleId":"296","severity":1,"message":"297","line":37,"column":42,"nodeType":"298","messageId":"299","endLine":37,"endColumn":45,"suggestions":"327"},{"ruleId":"305","severity":1,"message":"317","line":7,"column":55,"nodeType":"307","messageId":"308","endLine":7,"endColumn":68},{"ruleId":"296","severity":1,"message":"297","line":13,"column":29,"nodeType":"298","messageId":"299","endLine":13,"endColumn":32,"suggestions":"328"},{"ruleId":"296","severity":1,"message":"297","line":13,"column":63,"nodeType":"298","messageId":"299","endLine":13,"endColumn":66,"suggestions":"329"},{"ruleId":"305","severity":1,"message":"316","line":1,"column":17,"nodeType":"307","messageId":"308","endLine":1,"endColumn":33},{"ruleId":"301","severity":1,"message":"302","line":13,"column":29,"nodeType":"303","messageId":"304","endLine":13,"endColumn":56},{"ruleId":"305","severity":1,"message":"317","line":6,"column":17,"nodeType":"307","messageId":"308","endLine":6,"endColumn":30},{"ruleId":"305","severity":1,"message":"320","line":6,"column":8,"nodeType":"307","messageId":"308","endLine":6,"endColumn":19},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["330","331"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["332","333"],["334","335"],"Argument 'value' should be typed with a non-any type.","anyTypedArg",["336","337"],["338","339"],"'MutableRefObject' is defined but never used.","'ReactChildren' is defined but never used.",["340","341"],["342","343"],"'listService' is defined but never used.","'removeSub' is defined but never used.",["344","345"],["346","347"],["348","349"],"'setAreaAction' is defined but never used.",["350","351"],["352","353"],["354","355"],["356","357"],{"messageId":"358","fix":"359","desc":"360"},{"messageId":"361","fix":"362","desc":"363"},{"messageId":"358","fix":"364","desc":"360"},{"messageId":"361","fix":"365","desc":"363"},{"messageId":"358","fix":"366","desc":"360"},{"messageId":"361","fix":"367","desc":"363"},{"messageId":"358","fix":"368","desc":"360"},{"messageId":"361","fix":"369","desc":"363"},{"messageId":"358","fix":"370","desc":"360"},{"messageId":"361","fix":"371","desc":"363"},{"messageId":"358","fix":"372","desc":"360"},{"messageId":"361","fix":"373","desc":"363"},{"messageId":"358","fix":"374","desc":"360"},{"messageId":"361","fix":"375","desc":"363"},{"messageId":"358","fix":"376","desc":"360"},{"messageId":"361","fix":"377","desc":"363"},{"messageId":"358","fix":"378","desc":"360"},{"messageId":"361","fix":"379","desc":"363"},{"messageId":"358","fix":"380","desc":"360"},{"messageId":"361","fix":"381","desc":"363"},{"messageId":"358","fix":"382","desc":"360"},{"messageId":"361","fix":"383","desc":"363"},{"messageId":"358","fix":"384","desc":"360"},{"messageId":"361","fix":"385","desc":"363"},{"messageId":"358","fix":"386","desc":"360"},{"messageId":"361","fix":"387","desc":"363"},{"messageId":"358","fix":"388","desc":"360"},{"messageId":"361","fix":"389","desc":"363"},"suggestUnknown",{"range":"390","text":"391"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"390","text":"392"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"393","text":"391"},{"range":"393","text":"392"},{"range":"394","text":"391"},{"range":"394","text":"392"},{"range":"395","text":"391"},{"range":"395","text":"392"},{"range":"396","text":"391"},{"range":"396","text":"392"},{"range":"397","text":"391"},{"range":"397","text":"392"},{"range":"398","text":"391"},{"range":"398","text":"392"},{"range":"399","text":"391"},{"range":"399","text":"392"},{"range":"400","text":"391"},{"range":"400","text":"392"},{"range":"401","text":"391"},{"range":"401","text":"392"},{"range":"402","text":"391"},{"range":"402","text":"392"},{"range":"403","text":"391"},{"range":"403","text":"392"},{"range":"404","text":"391"},{"range":"404","text":"392"},{"range":"405","text":"391"},{"range":"405","text":"392"},[1646,1649],"unknown","never",[689,692],[835,838],[944,947],[950,953],[431,434],[465,468],[1646,1649],[689,692],[835,838],[944,947],[950,953],[431,434],[465,468]]
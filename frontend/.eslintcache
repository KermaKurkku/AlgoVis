[{"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx":"1","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx":"2","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts":"3","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/runningReducer.ts":"4","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts":"5","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx":"6","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx":"7","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts":"8","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/types.ts":"9","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts":"10","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts":"11","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/actions.ts":"12","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts":"13","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts":"14","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/hooks/index.ts":"15","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts":"16","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/isRunning.ts":"17","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx":"18","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts":"19","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts":"20","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts":"21","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts":"22","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts":"23","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts":"24","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts":"25","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts":"26","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx":"27","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts":"28"},{"size":285,"mtime":1610374432987,"results":"29","hashOfConfig":"30"},{"size":4242,"mtime":1610615987898,"results":"31","hashOfConfig":"30"},{"size":929,"mtime":1610364646582,"results":"32","hashOfConfig":"30"},{"size":1008,"mtime":1610454073810,"results":"33","hashOfConfig":"30"},{"size":929,"mtime":1610454073810,"results":"34","hashOfConfig":"30"},{"size":1226,"mtime":1610623000709,"results":"35","hashOfConfig":"30"},{"size":2839,"mtime":1610711244291,"results":"36","hashOfConfig":"30"},{"size":342,"mtime":1610454073810,"results":"37","hashOfConfig":"30"},{"size":545,"mtime":1610454073810,"results":"38","hashOfConfig":"30"},{"size":825,"mtime":1610454424853,"results":"39","hashOfConfig":"30"},{"size":1508,"mtime":1610454073810,"results":"40","hashOfConfig":"30"},{"size":509,"mtime":1610454073810,"results":"41","hashOfConfig":"30"},{"size":324,"mtime":1610454073810,"results":"42","hashOfConfig":"30"},{"size":261,"mtime":1610454073810,"results":"43","hashOfConfig":"30"},{"size":1100,"mtime":1610705835568,"results":"44","hashOfConfig":"30"},{"size":57,"mtime":1609944163854,"results":"45","hashOfConfig":"30"},{"size":329,"mtime":1610454073810,"results":"46","hashOfConfig":"30"},{"size":735,"mtime":1610710013343,"results":"47","hashOfConfig":"30"},{"size":820,"mtime":1610108861279,"results":"48","hashOfConfig":"30"},{"size":185,"mtime":1610454320712,"results":"49","hashOfConfig":"30"},{"size":397,"mtime":1610454073810,"results":"50","hashOfConfig":"30"},{"size":395,"mtime":1610108473356,"results":"51","hashOfConfig":"30"},{"size":83,"mtime":1610108518906,"results":"52","hashOfConfig":"30"},{"size":1232,"mtime":1610454190541,"results":"53","hashOfConfig":"30"},{"size":1659,"mtime":1610454073810,"results":"54","hashOfConfig":"30"},{"size":1108,"mtime":1610616164796,"results":"55","hashOfConfig":"30"},{"size":854,"mtime":1610706256090,"results":"56","hashOfConfig":"30"},{"size":704,"mtime":1610711210171,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"15q74u",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx",[],[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx",["119","120"],"import React, { useState, useRef} from 'react'\nimport {\n  Layout,\n  Typography,\n  Menu,\n  Button,\n  Skeleton,\n  Divider\n} from 'antd'\n\nconst { Title } = Typography\nconst { Header, Footer, Sider, Content } = Layout\n\nimport Bars from './Components/Bars'\nimport ListSizeSlider from './Components/ListSizeSlider'\n\nimport isRunning from './utils/isRunning'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setStopped, setRunning, setWaiting } from './store/running/runningReducer'\n\n// Figure out webworkers at some point maybe?\n//import SortWorker from 'comlink-loader!./worker'\n\nimport {\n  runAlgorithm,\n  Algorithms,\n  AlgorithmTypes\n} from './services/AlgorithmRunner'\nimport { RootState } from './store'\nimport { fetchNewList } from './store/list/listReducer'\nimport { useContainerDimensions } from './hooks'\n\nconst App: React.FC = () => {\n  const algorithmOptions: string[] = Object.values(AlgorithmTypes) as string[]\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<string>(algorithmOptions[0])\n\n  const componentRef = useRef<HTMLDivElement>(null)\n  const { width } = useContainerDimensions(componentRef)\n\n  const dispatch = useDispatch()\n\n  const running = useSelector((state: RootState) => state.running)\n  const listSize = useSelector((state: RootState) => state.numberList.size)\n\n  const startVisualization = async (): Promise<void> => {\n    if (running === 'finished')\n      await dispatch(fetchNewList(listSize))\n\n    dispatch(setRunning())\n    const selected: Algorithms =  selectedAlgorithm as Algorithms\n    await runAlgorithm(selected)\n  }\n\n  const stopVisualization = (): void => {\n    dispatch(setStopped())\n    \n  }\n\n  const menuOnClick = (event: any)  => {\n    const checkIfNotWaiting = async () => {\n      if (running !== 'waiting') {\n        await dispatch(fetchNewList(listSize))\n        dispatch(setWaiting())\n      }\n    }\n\n    checkIfNotWaiting()\n\n    setSelectedAlgorithm(event.key)\n  }\n\n  return (\n    <div>\n      <Layout>\n        <Header className='header'>\n          <div />\n          <Menu theme='dark' mode='horizontal' defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">AlgoVis</Menu.Item>\n          </Menu>\n        </Header>\n        <Layout style={{ margin: '0 5em 0 5em' }}>\n          <Sider width={'20%'} className='site-layout-background' theme='light'>\n\n\n\n            <Title level={2} style={{ margin: '0,5em auto', padding: '0.2em 1em' }}>Select list size</Title>\n            <ListSizeSlider />\n            {running === 'stopped' || running === 'finished' || running === 'waiting' ?\n              <Button type='primary' block size='large' style={{\n                margin: '1em auto',\n              }}\n              onClick={startVisualization}\n              >Visualize</Button> :\n              <Button type='primary' block size='large' style={{\n                margin: '1em auto'\n              }}\n              onClick={stopVisualization}\n              >Stop visualization</Button>\n            }\n            <Divider>Select sorting algorithm</Divider>\n            {/*Menu for selecting sorting algorithm*/}\n            <Menu\n              mode=\"inline\"\n              style={{ borderRight: 0 }}\n              defaultOpenKeys={['slider', 'sub2']}\n              defaultSelectedKeys={[algorithmOptions[0]]}\n              onClick={menuOnClick}\n            >\n              {algorithmOptions.map(a =>\n                <Menu.Item\n                  key={a}\n                  disabled={running === 'running' ? true : false}\n                >{a}</Menu.Item>\n              )}\n            </Menu>\n\n          </Sider>\n          <Layout style={{ padding: '0 10em em' }}>\n            <Content className=\"site-layout-content\" id='container'\n                style={{\n                  padding: 24,\n                  margin: 0,\n                }}\n              >\n              <div ref={componentRef}>\n                <Bars componentWidth={width} />\n                <Divider />\n                <Skeleton />\n                <Skeleton />\n              </div>\n            </Content>\n          </Layout>\n        </Layout>\n        <Footer style={{ textAlign: 'center' }}>AlgoVis algorithm visualizer @2020 Created by Jere Salmensaari</Footer>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/runningReducer.ts",["121"],"import {\n  RunningStateAction,\n  runningType,\n  SET_RUNNING,\n  SET_STOPPED,\n  SET_FINISHED,\n  SET_WAITING\n} from './types'\nimport {\n  setRunningAction,\n  setStoppedAction,\n  setFinishedAction,\n  setWaitingAction\n} from './actions'\n\nimport { AppType } from '..'\n\nconst initialState: runningType = 'waiting'\n\nexport const setRunning = (): AppType => async dispatch => {\n  dispatch(setRunningAction())\n}\n\nexport const setStopped = (): AppType => async dispatch => {\n  dispatch(setStoppedAction())\n}\n\nexport const setFinished = (): AppType => async dispatch => {\n  dispatch(setFinishedAction())\n}\n\nexport const setWaiting = (): AppType => async dispatch => {\n  dispatch(setWaitingAction())\n}\n\nconst reducer = (state = initialState, action: RunningStateAction) => {\n  switch (action.type){\n  case SET_RUNNING:\n    return 'running'\n  case SET_STOPPED:\n    return 'stopped'\n  case SET_FINISHED:\n    return 'finished'\n  case SET_WAITING:\n    return 'waiting'\n  default:\n    return state\n  }\n}\n\nexport default reducer","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx",["122","123"],"import React, { useState, useEffect } from 'react'\nimport { Slider } from 'antd'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nimport { fetchNewList, changeListSize } from '../store/list/listReducer'\n\nimport isRunning from '../utils/isRunning'\n\n\nconst ListSizeSlider: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const [sliderValue, setSliderValue] = useState(25)\n  const listSize = useSelector((state: RootState) => state.numberList.size)\n\n  useEffect(() => {\n    dispatch(fetchNewList(listSize))\n  }, [listSize])\n\n  const onSliderChange = (value: any) => {\n    if (typeof value !== 'number' || isNaN(Number(value)))\n      return\n    setSliderValue(value)\n  }\n\n  const setNewListSize = (value: any) => {\n    if (typeof value !== 'number')\n      return\n    if (value > 60)\n      value = 60\n    dispatch(changeListSize(value))\n  }\n\n  return (\n    <div>\n      <Slider\n        min={3}\n        max={60}\n        onChange={onSliderChange}\n        onAfterChange={setNewListSize}\n        value={typeof sliderValue === 'number' ? sliderValue : 25}\n        tipFormatter={null}\n        disabled={isRunning() === 'running'}\n      />\n    </div>\n  )\n}\n\nexport default ListSizeSlider","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx",["124","125","126","127","128"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/hooks/index.ts",["129","130","131"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/isRunning.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx",["132"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts",["133"],"import {\n  BubbleSort,\n  QuickSort,\n  BogoSort,\n  Algorithms\n} from './types'\n\nimport {\n  quickSort,\n  bubbleSort,\n  bogoSort\n} from '../../Algorithms'\n\nexport const runAlgorithm = async (type: Algorithms) => {\n  switch (type) {\n  case BubbleSort:\n    return await bubbleSort()\n  case QuickSort:\n    return await quickSort()\n  case BogoSort:\n    return await bogoSort()\n  default:\n    return\n  }\n}","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx",["134","135","136","137","138","139","140","141","142","143","144"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts",["145","146","147"],{"ruleId":"148","severity":1,"message":"149","line":17,"column":8,"nodeType":"150","messageId":"151","endLine":17,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":60,"column":31,"nodeType":"154","messageId":"155","endLine":60,"endColumn":34,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":36,"column":17,"nodeType":"159","messageId":"160","endLine":36,"endColumn":70},{"ruleId":"152","severity":1,"message":"153","line":22,"column":34,"nodeType":"154","messageId":"155","endLine":22,"endColumn":37,"suggestions":"161"},{"ruleId":"152","severity":1,"message":"153","line":28,"column":34,"nodeType":"154","messageId":"155","endLine":28,"endColumn":37,"suggestions":"162"},{"ruleId":"148","severity":1,"message":"163","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"164","line":4,"column":28,"nodeType":"150","messageId":"151","endLine":4,"endColumn":40},{"ruleId":"148","severity":1,"message":"165","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":21},{"ruleId":"148","severity":1,"message":"166","line":33,"column":9,"nodeType":"150","messageId":"151","endLine":33,"endColumn":16},{"ruleId":"148","severity":1,"message":"167","line":60,"column":9,"nodeType":"150","messageId":"151","endLine":60,"endColumn":17},{"ruleId":"157","severity":1,"message":"168","line":37,"column":29,"nodeType":"150","messageId":"169","endLine":37,"endColumn":39},{"ruleId":"152","severity":1,"message":"153","line":37,"column":36,"nodeType":"154","messageId":"155","endLine":37,"endColumn":39,"suggestions":"170"},{"ruleId":"152","severity":1,"message":"153","line":37,"column":42,"nodeType":"154","messageId":"155","endLine":37,"endColumn":45,"suggestions":"171"},{"ruleId":"148","severity":1,"message":"172","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":33},{"ruleId":"157","severity":1,"message":"158","line":14,"column":29,"nodeType":"159","messageId":"160","endLine":14,"endColumn":56},{"ruleId":"148","severity":1,"message":"173","line":7,"column":27,"nodeType":"150","messageId":"151","endLine":7,"endColumn":36},{"ruleId":"148","severity":1,"message":"174","line":7,"column":55,"nodeType":"150","messageId":"151","endLine":7,"endColumn":68},{"ruleId":"148","severity":1,"message":"175","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":11},{"ruleId":"148","severity":1,"message":"176","line":12,"column":10,"nodeType":"150","messageId":"151","endLine":12,"endColumn":24},{"ruleId":"148","severity":1,"message":"177","line":12,"column":26,"nodeType":"150","messageId":"151","endLine":12,"endColumn":43},{"ruleId":"152","severity":1,"message":"153","line":14,"column":29,"nodeType":"154","messageId":"155","endLine":14,"endColumn":32,"suggestions":"178"},{"ruleId":"152","severity":1,"message":"153","line":14,"column":63,"nodeType":"154","messageId":"155","endLine":14,"endColumn":66,"suggestions":"179"},{"ruleId":"148","severity":1,"message":"180","line":15,"column":10,"nodeType":"150","messageId":"151","endLine":15,"endColumn":21},{"ruleId":"148","severity":1,"message":"181","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":25},{"ruleId":"148","severity":1,"message":"182","line":16,"column":27,"nodeType":"150","messageId":"151","endLine":16,"endColumn":45},{"ruleId":"148","severity":1,"message":"183","line":17,"column":9,"nodeType":"150","messageId":"151","endLine":17,"endColumn":21},{"ruleId":"148","severity":1,"message":"174","line":6,"column":17,"nodeType":"150","messageId":"151","endLine":6,"endColumn":30},{"ruleId":"157","severity":1,"message":"158","line":10,"column":32,"nodeType":"159","messageId":"160","endLine":10,"endColumn":64},{"ruleId":"152","severity":1,"message":"153","line":12,"column":24,"nodeType":"154","messageId":"155","endLine":12,"endColumn":27,"suggestions":"184"},"@typescript-eslint/no-unused-vars","'isRunning' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["185","186"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["187","188"],["189","190"],"'useState' is defined but never used.","'TransitionFn' is defined but never used.","'useDispatch' is defined but never used.","'barList' is assigned a value but never used.","'fragment' is assigned a value but never used.","Argument 'value' should be typed with a non-any type.","anyTypedArg",["191","192"],["193","194"],"'MutableRefObject' is defined but never used.","'useEffect' is defined but never used.","'ReactChildren' is defined but never used.","'Bar' is defined but never used.","'AnimationChild' is defined but never used.","'AnimationChildren' is defined but never used.",["195","196"],["197","198"],"'boundingBox' is assigned a value but never used.","'prevBoundingBox' is assigned a value but never used.","'setPrevBoundingBox' is assigned a value but never used.","'prefChildren' is assigned a value but never used.",["199","200"],{"messageId":"201","fix":"202","desc":"203"},{"messageId":"204","fix":"205","desc":"206"},{"messageId":"201","fix":"207","desc":"203"},{"messageId":"204","fix":"208","desc":"206"},{"messageId":"201","fix":"209","desc":"203"},{"messageId":"204","fix":"210","desc":"206"},{"messageId":"201","fix":"211","desc":"203"},{"messageId":"204","fix":"212","desc":"206"},{"messageId":"201","fix":"213","desc":"203"},{"messageId":"204","fix":"214","desc":"206"},{"messageId":"201","fix":"215","desc":"203"},{"messageId":"204","fix":"216","desc":"206"},{"messageId":"201","fix":"217","desc":"203"},{"messageId":"204","fix":"218","desc":"206"},{"messageId":"201","fix":"219","desc":"203"},{"messageId":"204","fix":"220","desc":"206"},"suggestUnknown",{"range":"221","text":"222"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"221","text":"223"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"224","text":"222"},{"range":"224","text":"223"},{"range":"225","text":"222"},{"range":"225","text":"223"},{"range":"226","text":"222"},{"range":"226","text":"223"},{"range":"227","text":"222"},{"range":"227","text":"223"},{"range":"228","text":"222"},{"range":"228","text":"223"},{"range":"229","text":"222"},{"range":"229","text":"223"},{"range":"230","text":"222"},{"range":"230","text":"223"},[1689,1692],"unknown","never",[607,610],[753,756],[944,947],[950,953],[461,464],[495,498],[381,384]]
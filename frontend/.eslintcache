[{"/home/jere/Documents/fullstack_open/Algovis/frontend/src/index.tsx":"1","/home/jere/Documents/fullstack_open/Algovis/frontend/src/App.tsx":"2","/home/jere/Documents/fullstack_open/Algovis/frontend/src/utils/listGenerator.ts":"3","/home/jere/Documents/fullstack_open/Algovis/frontend/src/Components/Bar.tsx":"4","/home/jere/Documents/fullstack_open/Algovis/frontend/src/constants.ts":"5"},{"size":176,"mtime":1609251618226,"results":"6","hashOfConfig":"7"},{"size":2083,"mtime":1609341686596,"results":"8","hashOfConfig":"7"},{"size":629,"mtime":1609251470878,"results":"9","hashOfConfig":"7"},{"size":530,"mtime":1609336254458,"results":"10","hashOfConfig":"7"},{"size":53,"mtime":1609338813473,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hyxyy6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/jere/Documents/fullstack_open/Algovis/frontend/src/index.tsx",[],[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/App.tsx",["24","25"],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/utils/listGenerator.ts",[],[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/Components/Bar.tsx",[],"/home/jere/Documents/fullstack_open/Algovis/frontend/src/constants.ts",[],{"ruleId":"26","severity":1,"message":"27","line":38,"column":34,"nodeType":"28","messageId":"29","endLine":38,"endColumn":37,"suggestions":"30"},{"ruleId":"26","severity":1,"message":"27","line":44,"column":34,"nodeType":"28","messageId":"29","endLine":44,"endColumn":37,"suggestions":"31"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["32","33"],["34","35"],{"messageId":"36","fix":"37","desc":"38"},{"messageId":"39","fix":"40","desc":"41"},{"messageId":"36","fix":"42","desc":"38"},{"messageId":"39","fix":"43","desc":"41"},"suggestUnknown",{"range":"44","text":"45"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"44","text":"46"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"47","text":"45"},{"range":"47","text":"46"},[1014,1017],"unknown","never",[1160,1163]]
[{"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx":"1","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx":"2","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts":"3","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx":"4","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/PageHeader.tsx":"5","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/AlgorithmSider.tsx":"6","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts":"7","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts":"8","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/types.ts":"9","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts":"10","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts":"11","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/runningReducer.ts":"12","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/hooks/index.ts":"13","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx":"14","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx":"15","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx":"16","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts":"17","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/actions.ts":"18","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts":"19","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts":"20","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts":"21","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts":"22","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts":"23","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts":"24","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/index.ts":"25","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts":"26","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts":"27","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/mergeSort.ts":"28","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/stalinSort.ts":"29","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts":"30","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts":"31","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts":"32","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/insertionSort.ts":"33","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Description.tsx":"34","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/descriptions.ts":"35"},{"size":285,"mtime":1612696469920,"results":"36","hashOfConfig":"37"},{"size":1901,"mtime":1615110164026,"results":"38","hashOfConfig":"37"},{"size":929,"mtime":1612696469920,"results":"39","hashOfConfig":"37"},{"size":1478,"mtime":1612696469920,"results":"40","hashOfConfig":"37"},{"size":2310,"mtime":1615114135064,"results":"41","hashOfConfig":"37"},{"size":4635,"mtime":1615114156847,"results":"42","hashOfConfig":"37"},{"size":1036,"mtime":1612696469920,"results":"43","hashOfConfig":"37"},{"size":1767,"mtime":1612696469920,"results":"44","hashOfConfig":"37"},{"size":852,"mtime":1615113923706,"results":"45","hashOfConfig":"37"},{"size":241,"mtime":1614682718511,"results":"46","hashOfConfig":"37"},{"size":707,"mtime":1614682718511,"results":"47","hashOfConfig":"37"},{"size":1655,"mtime":1615113904882,"results":"48","hashOfConfig":"37"},{"size":1100,"mtime":1612696469920,"results":"49","hashOfConfig":"37"},{"size":2324,"mtime":1612696469920,"results":"50","hashOfConfig":"37"},{"size":1718,"mtime":1615113695200,"results":"51","hashOfConfig":"37"},{"size":1183,"mtime":1614682718511,"results":"52","hashOfConfig":"37"},{"size":1012,"mtime":1612696469920,"results":"53","hashOfConfig":"37"},{"size":740,"mtime":1615113883982,"results":"54","hashOfConfig":"37"},{"size":261,"mtime":1612696469920,"results":"55","hashOfConfig":"37"},{"size":230,"mtime":1614682718511,"results":"56","hashOfConfig":"37"},{"size":104,"mtime":1615114086060,"results":"57","hashOfConfig":"37"},{"size":734,"mtime":1612696469920,"results":"58","hashOfConfig":"37"},{"size":219,"mtime":1612696469920,"results":"59","hashOfConfig":"37"},{"size":585,"mtime":1615113116713,"results":"60","hashOfConfig":"37"},{"size":429,"mtime":1615113773571,"results":"61","hashOfConfig":"37"},{"size":642,"mtime":1615114057076,"results":"62","hashOfConfig":"37"},{"size":172,"mtime":1612696469920,"results":"63","hashOfConfig":"37"},{"size":2379,"mtime":1614682718511,"results":"64","hashOfConfig":"37"},{"size":1175,"mtime":1614682718511,"results":"65","hashOfConfig":"37"},{"size":1209,"mtime":1614682718508,"results":"66","hashOfConfig":"37"},{"size":1806,"mtime":1614682718511,"results":"67","hashOfConfig":"37"},{"size":1220,"mtime":1614682718508,"results":"68","hashOfConfig":"37"},{"size":1367,"mtime":1614682718511,"results":"69","hashOfConfig":"37"},{"size":1442,"mtime":1615119223134,"results":"70","hashOfConfig":"37"},{"size":276,"mtime":1615112138833,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"19r9wms",{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx",[],[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx",["149","150","151"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx",["152","153"],"import React, { useState, useEffect, createRef } from 'react'\n\nimport Bar from './Visualization/Bar'\n\nimport { useSelector } from 'react-redux'\n\nimport { RootState, CurrentNumberState } from '../store'\n\nimport AnimateBars from './Visualization/AnimateBars'\n\ninterface Props {\n  componentWidth: number;\n}\n\n// wery much in progress\n// Maybe\n// https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba\n// https://codesandbox.io/s/reorder-elements-with-slide-transition-and-react-hooks-flip-211f2?from-embed\nconst Bars: React.FC<Props> = ({componentWidth}: { componentWidth: number } ) => {\n  const listSize: number = useSelector((state: RootState) => state.numberList.size)\n  const list: number[] = useSelector((state: RootState) => state.numberList.list)\n  const selected: CurrentNumberState = useSelector((state: RootState) => state.currentNumber)\n  \n  const width: number = 100/listSize * componentWidth/listSize \n\n  return (\n    <div style={{ display: 'flex' }}>\n      <AnimateBars>\n        {\n          list.map((b, i) => {\n            const barRef = createRef<HTMLDivElement>()\n            return <Bar key={b} width={width} height={b/listSize} area={i >= selected.area.start && i <= selected.area.end}\n            // Fix types here\n            // @ts-expect-error\n              main={i === selected.main} sub={i === selected.sub} ref={barRef} // Ref is null for some reason\n            />\n        })}\n      </AnimateBars>\n    </div>\n  )\n}\n\nexport default Bars","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/PageHeader.tsx",["154","155","156","157","158","159","160"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/AlgorithmSider.tsx",["161"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts",["162"],"import {\n  CurrentNumberState,\n  CurrentNumberActionType,\n  SET_CURRENT,\n  SET_MAIN,\n  SET_SUB,\n  REMOVE_CURRENT,\n  REMOVE_SUB,\n  SET_AREA\n} from './types'\nimport {\n  setCurrentAction,\n  setMainAction,\n  setSubAction,\n  removeCurrentAction,\n  removeSubAction,\n  setAreaAction\n} from './actions'\nimport { AppType } from '../'\n\nconst initialState: CurrentNumberState = {\n  main: -1,\n  sub: null,\n  area: {\n    start: -1,\n    end: -1\n  }\n}\n\nexport const setCurrent = (main: number, sub: number | null): AppType => async dispatch => {\n  dispatch(setCurrentAction(main, sub))\n}\n\nexport const setMain = (main: number): AppType => async dispatch => {\n  dispatch(setMainAction(main))\n}\n\nexport const setSub = (sub: number): AppType => async dispatch => {\n  dispatch(setSubAction(sub))\n}\n\nexport const removeCurrent = (): AppType => async dispatch => {\n  dispatch(removeCurrentAction())\n}\n\nexport const removeSub = (): AppType => async dispatch => {\n  dispatch(removeSubAction())\n}\n\nconst reducer = (state = initialState, action: CurrentNumberActionType): CurrentNumberState => {\n  switch(action.type) {\n  case SET_CURRENT:\n    return {\n      ...state,\n      main: action.payload.main,\n      sub: action.payload.sub\n    }\n  case SET_MAIN:\n    return {\n      ...state,\n      main: action.payload.main,\n      sub: state.sub\n    }\n  case SET_SUB:\n    return {\n      ...state,\n      main: state.main,\n      sub: action.payload.sub\n    }\n  case REMOVE_CURRENT:\n    return {\n      ...state,\n      main: -1\n    }\n  case REMOVE_SUB:\n    return {\n      ...state,\n      sub: null\n    }\n  case SET_AREA:\n    return {\n      ...state,\n      area: {\n        start: action.payload.start,\n        end: action.payload.end\n      }\n    }\n  default:\n    return state\n  }\n}\n\nexport default reducer","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/runningReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/hooks/index.ts",["163","164","165"],"import { useState, useEffect, useRef} from 'react'\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport const useContainerDimensions = (myRef: React.MutableRefObject<HTMLDivElement | null>): Dimensions => {\n  const getDimensions = (): Dimensions => ({\n    width: myRef.current?.offsetWidth || 0,\n    height: myRef.current?.offsetHeight || 0\n  })\n\n  const [dimensions, setDimensions] = useState<Dimensions>({ width: 0, height: 0 })\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions(getDimensions())\n    }\n\n    if (myRef.current)\n      setDimensions(getDimensions())\n\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [myRef])\n\n  return dimensions\n\n}\n\n// https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n// Used to get the previous value of an object\nexport const usePrevious = (value: any): any => {\n  const prevChildrenRef = useRef()\n\n  useEffect(() => {\n    prevChildrenRef.current = value\n  }, [value])\n\n  return prevChildrenRef.current\n}","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx",["166","167","168"],"\n/*\n  Based on https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba by Tara Ojo\n  Used to animate changing bar positions\n*/\n\nimport React, { useState, useEffect, useLayoutEffect, ReactChildren } from 'react'\nimport { usePrevious } from '../../hooks'\nimport calculateBoundingBoxes from '../../utils/calculateBoundingBoxes'\n\nimport { AnimationChild, DOMRectDict } from '../../types'\n\nconst AnimateBars: React.FC<any> = ({ children }: { children: any}) => {\n  const [boundingBox, setBoundingBox] = useState<DOMRectDict | null>({})\n  const [prevBoundingBox, setPrevBoundingBox] = useState<DOMRectDict | null>({})\n  const prevChildren = usePrevious(children)\n\n  // Fix bounding boxes updating when list size updates\n  useLayoutEffect(() => {\n    const newBoundingBox = calculateBoundingBoxes(children)\n    setBoundingBox(newBoundingBox)\n  }, [children])\n\n  useLayoutEffect(() => {\n    const prevBoundingBox = calculateBoundingBoxes(prevChildren)\n    setPrevBoundingBox(prevBoundingBox)\n  }, [prevChildren])\n\n  useEffect(() => {\n    if (!prevBoundingBox || !boundingBox || Object.keys(prevBoundingBox).length < Object.keys(boundingBox).length)\n      return\n\n    const hasPrevBoundingBox = Object.keys(prevBoundingBox).length\n\n    if (hasPrevBoundingBox) {\n      React.Children.forEach(children, (child: AnimationChild) => {\n        const domNode = child.ref.current\n        const firstBox = prevBoundingBox[child.key]\n        const lastBox = boundingBox[child.key]\n        if (!firstBox || !lastBox)\n          return\n\n        const changeInX = firstBox.left - lastBox.left\n\n\n        if (changeInX) {\n          requestAnimationFrame(() => {\n            // Before DOM paints, invert child to old position\n            // Maybe longer animation time?\n            // Reduce speed of sorting so the animation shows\n            domNode.style.transform = `translateX(${changeInX}px)`\n            domNode.style.transition = `transform 0ms`\n\n            requestAnimationFrame(() => {\n              // After previous frame, remove the transition to play the animation\n              domNode.style.transform = ''\n              domNode.style.transition = 'transform 200ms'\n            })\n          })\n        }\n      })\n    }\n  }, [boundingBox, prevBoundingBox, children])\n\n  return children\n\n}\n\nexport default AnimateBars\n","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx",["169","170","171","172"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx",["173"],"import React, { MutableRefObject } from 'react'\n\ntype Props = {\n  height: number;\n  width: number;\n  main: boolean;\n  sub: boolean;\n  area: boolean;\n}\n\ntype Ref = HTMLDivElement\n\ninterface Bar {\n  height: number;\n  width: number;\n  main: boolean;\n  sub: boolean;\n  area: boolean;\n}\n\n// Renders a bar to represent a number in the list\nconst Bar: React.FC<Bar> = React.forwardRef<Ref, Props>((props: Props, ref) => {\n\n  const normal = !props.main && !props.sub\n  const maxHeight = 30\n  const style = {\n    height: `${maxHeight+1}em`,\n    width: `${props.width}%`,\n    background: props.area ? \"rgb(170, 182, 193, 0.6)\" : 'transparent',\n    \n  }\n  const barStyle = {\n    height: `${maxHeight*props.height}em`,\n    maxHeight: `${maxHeight}em`,\n    width: 'auto',\n    background: normal ? '#f0f2f5' : props.main ? '#FF7A32' : \n    props.sub ? '#2EF550' : '#f0f2f5',\n    zIndex: 50,\n    borderStyle: 'solid',\n    borderWidth: '0.2em',\n    borderColor: '#1890ff',//'#f0f2f5',\n    margin: '0.1em',\n    opacity: '100%'\n  }\n\n  return (\n    <div style={style} >\n      <div style={barStyle} ref={ref} />\n    </div>\n  )\n})\n\n// Eslint is being a douche\nBar.displayName = 'Bar'\n\nexport default Bar\n","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts",["174"],"/*\n  Based on https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba by Tara Ojo\n  Calculates the bounding boxes of elements given to it\n*/\n\nimport React, { ReactChildren } from 'react'\n\nimport { AnimationChild, AnimationChildren, DOMRectDict } from '../types'\n\nconst calculateBoundingBoxes = (children: AnimationChildren): DOMRectDict | null => {\n  const boundingBoxes: DOMRectDict = {}\n\n  React.Children.forEach(children, (child: AnimationChild) => {\n    if (!child.ref.current)\n      return null\n    const domNode = child.ref.current\n    const nodeBoundingBox = domNode.getBoundingClientRect()\n\n\n    boundingBoxes[child.key] = nodeBoundingBox\n  })\n\n  return boundingBoxes\n}\n\nexport default calculateBoundingBoxes","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts",["175"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/mergeSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/stalinSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/insertionSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Description.tsx",["176","177","178","179","180"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/descriptions.ts",["181"],{"ruleId":"182","severity":1,"message":"183","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":7},{"ruleId":"182","severity":1,"message":"186","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":9},{"ruleId":"182","severity":1,"message":"187","line":10,"column":9,"nodeType":"184","messageId":"185","endLine":10,"endColumn":15},{"ruleId":"182","severity":1,"message":"188","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"189","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"190","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":23},{"ruleId":"182","severity":1,"message":"189","line":1,"column":25,"nodeType":"184","messageId":"185","endLine":1,"endColumn":34},{"ruleId":"182","severity":1,"message":"188","line":1,"column":36,"nodeType":"184","messageId":"185","endLine":1,"endColumn":44},{"ruleId":"182","severity":1,"message":"191","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":13},{"ruleId":"182","severity":1,"message":"192","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":17},{"ruleId":"182","severity":1,"message":"193","line":17,"column":34,"nodeType":"184","messageId":"185","endLine":17,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":26,"column":20,"nodeType":"196","messageId":"197","endLine":26,"endColumn":51},{"ruleId":"198","severity":1,"message":"199","line":60,"column":31,"nodeType":"200","messageId":"201","endLine":60,"endColumn":34,"suggestions":"202"},{"ruleId":"182","severity":1,"message":"203","line":17,"column":3,"nodeType":"184","messageId":"185","endLine":17,"endColumn":16},{"ruleId":"194","severity":1,"message":"204","line":37,"column":29,"nodeType":"184","messageId":"205","endLine":37,"endColumn":39},{"ruleId":"198","severity":1,"message":"199","line":37,"column":36,"nodeType":"200","messageId":"201","endLine":37,"endColumn":39,"suggestions":"206"},{"ruleId":"198","severity":1,"message":"199","line":37,"column":42,"nodeType":"200","messageId":"201","endLine":37,"endColumn":45,"suggestions":"207"},{"ruleId":"182","severity":1,"message":"208","line":7,"column":55,"nodeType":"184","messageId":"185","endLine":7,"endColumn":68},{"ruleId":"198","severity":1,"message":"199","line":13,"column":29,"nodeType":"200","messageId":"201","endLine":13,"endColumn":32,"suggestions":"209"},{"ruleId":"198","severity":1,"message":"199","line":13,"column":63,"nodeType":"200","messageId":"201","endLine":13,"endColumn":66,"suggestions":"210"},{"ruleId":"182","severity":1,"message":"190","line":1,"column":38,"nodeType":"184","messageId":"185","endLine":1,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":16,"column":24,"nodeType":"196","messageId":"197","endLine":16,"endColumn":56},{"ruleId":"198","severity":1,"message":"199","line":40,"column":34,"nodeType":"200","messageId":"201","endLine":40,"endColumn":37,"suggestions":"211"},{"ruleId":"198","severity":1,"message":"199","line":46,"column":34,"nodeType":"200","messageId":"201","endLine":46,"endColumn":37,"suggestions":"212"},{"ruleId":"182","severity":1,"message":"213","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":33},{"ruleId":"182","severity":1,"message":"208","line":6,"column":17,"nodeType":"184","messageId":"185","endLine":6,"endColumn":30},{"ruleId":"194","severity":1,"message":"195","line":13,"column":25,"nodeType":"196","messageId":"197","endLine":13,"endColumn":57},{"ruleId":"182","severity":1,"message":"214","line":1,"column":38,"nodeType":"184","messageId":"185","endLine":1,"endColumn":50},{"ruleId":"182","severity":1,"message":"215","line":1,"column":52,"nodeType":"184","messageId":"185","endLine":1,"endColumn":61},{"ruleId":"182","severity":1,"message":"216","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":12,"column":21,"nodeType":"196","messageId":"197","endLine":12,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":32,"column":28,"nodeType":"200","messageId":"201","endLine":32,"endColumn":31,"suggestions":"217"},{"ruleId":"194","severity":1,"message":"195","line":4,"column":26,"nodeType":"196","messageId":"197","endLine":4,"endColumn":58},"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Header' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Algorithms' is defined but never used.","'AlgorithmTypes' is defined but never used.","'setWaiting' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["218","219"],"'setAreaAction' is defined but never used.","Argument 'value' should be typed with a non-any type.","anyTypedArg",["220","221"],["222","223"],"'ReactChildren' is defined but never used.",["224","225"],["226","227"],["228","229"],["230","231"],"'MutableRefObject' is defined but never used.","'ReactElement' is defined but never used.","'ReactHTML' is defined but never used.","'useDispatch' is defined but never used.",["232","233"],{"messageId":"234","fix":"235","desc":"236"},{"messageId":"237","fix":"238","desc":"239"},{"messageId":"234","fix":"240","desc":"236"},{"messageId":"237","fix":"241","desc":"239"},{"messageId":"234","fix":"242","desc":"236"},{"messageId":"237","fix":"243","desc":"239"},{"messageId":"234","fix":"244","desc":"236"},{"messageId":"237","fix":"245","desc":"239"},{"messageId":"234","fix":"246","desc":"236"},{"messageId":"237","fix":"247","desc":"239"},{"messageId":"234","fix":"248","desc":"236"},{"messageId":"237","fix":"249","desc":"239"},{"messageId":"234","fix":"250","desc":"236"},{"messageId":"237","fix":"251","desc":"239"},{"messageId":"234","fix":"252","desc":"236"},{"messageId":"237","fix":"253","desc":"239"},"suggestUnknown",{"range":"254","text":"255"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"254","text":"256"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"257","text":"255"},{"range":"257","text":"256"},{"range":"258","text":"255"},{"range":"258","text":"256"},{"range":"259","text":"255"},{"range":"259","text":"256"},{"range":"260","text":"255"},{"range":"260","text":"256"},{"range":"261","text":"255"},{"range":"261","text":"256"},{"range":"262","text":"255"},{"range":"262","text":"256"},{"range":"263","text":"255"},{"range":"263","text":"256"},[1692,1695],"unknown","never",[944,947],[950,953],[431,434],[465,468],[1102,1105],[1248,1251],[846,849]]
[{"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx":"1","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx":"2","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts":"3","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx":"4","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/PageHeader.tsx":"5","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/AlgorithmSider.tsx":"6","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts":"7","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts":"8","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/types.ts":"9","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts":"10","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts":"11","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/runningReducer.ts":"12","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/hooks/index.ts":"13","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx":"14","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx":"15","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx":"16","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts":"17","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/actions.ts":"18","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts":"19","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts":"20","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts":"21","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts":"22","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts":"23","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts":"24","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/index.ts":"25","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts":"26","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts":"27","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/mergeSort.ts":"28","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/stalinSort.ts":"29","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts":"30","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts":"31","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts":"32","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/insertionSort.ts":"33","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Description.tsx":"34","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/descriptions.ts":"35"},{"size":285,"mtime":1612696469920,"results":"36","hashOfConfig":"37"},{"size":2211,"mtime":1615128098293,"results":"38","hashOfConfig":"37"},{"size":929,"mtime":1612696469920,"results":"39","hashOfConfig":"37"},{"size":1485,"mtime":1615127656532,"results":"40","hashOfConfig":"37"},{"size":2310,"mtime":1615128036872,"results":"41","hashOfConfig":"37"},{"size":4681,"mtime":1615127567402,"results":"42","hashOfConfig":"37"},{"size":1036,"mtime":1612696469920,"results":"43","hashOfConfig":"37"},{"size":1767,"mtime":1612696469920,"results":"44","hashOfConfig":"37"},{"size":852,"mtime":1615113923706,"results":"45","hashOfConfig":"37"},{"size":241,"mtime":1614682718511,"results":"46","hashOfConfig":"37"},{"size":707,"mtime":1614682718511,"results":"47","hashOfConfig":"37"},{"size":1655,"mtime":1615113904882,"results":"48","hashOfConfig":"37"},{"size":1100,"mtime":1612696469920,"results":"49","hashOfConfig":"37"},{"size":2324,"mtime":1612696469920,"results":"50","hashOfConfig":"37"},{"size":1718,"mtime":1615113695200,"results":"51","hashOfConfig":"37"},{"size":1183,"mtime":1614682718511,"results":"52","hashOfConfig":"37"},{"size":1012,"mtime":1612696469920,"results":"53","hashOfConfig":"37"},{"size":740,"mtime":1615113883982,"results":"54","hashOfConfig":"37"},{"size":261,"mtime":1612696469920,"results":"55","hashOfConfig":"37"},{"size":230,"mtime":1614682718511,"results":"56","hashOfConfig":"37"},{"size":104,"mtime":1615114086060,"results":"57","hashOfConfig":"37"},{"size":734,"mtime":1612696469920,"results":"58","hashOfConfig":"37"},{"size":219,"mtime":1612696469920,"results":"59","hashOfConfig":"37"},{"size":585,"mtime":1615113116713,"results":"60","hashOfConfig":"37"},{"size":429,"mtime":1615113773571,"results":"61","hashOfConfig":"37"},{"size":642,"mtime":1615114057076,"results":"62","hashOfConfig":"37"},{"size":172,"mtime":1612696469920,"results":"63","hashOfConfig":"37"},{"size":2379,"mtime":1614682718511,"results":"64","hashOfConfig":"37"},{"size":1175,"mtime":1614682718511,"results":"65","hashOfConfig":"37"},{"size":1209,"mtime":1614682718508,"results":"66","hashOfConfig":"37"},{"size":1806,"mtime":1614682718511,"results":"67","hashOfConfig":"37"},{"size":1220,"mtime":1614682718508,"results":"68","hashOfConfig":"37"},{"size":1367,"mtime":1614682718511,"results":"69","hashOfConfig":"37"},{"size":1442,"mtime":1615127472597,"results":"70","hashOfConfig":"37"},{"size":276,"mtime":1615112138833,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"19r9wms",{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/index.tsx",[],[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/App.tsx",["151","152","153","154","155"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Bars.tsx",["156","157"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/PageHeader.tsx",["158","159","160","161","162","163","164"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/AlgorithmSider.tsx",["165"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/currentNumberReducer.ts",["166"],"import {\n  CurrentNumberState,\n  CurrentNumberActionType,\n  SET_CURRENT,\n  SET_MAIN,\n  SET_SUB,\n  REMOVE_CURRENT,\n  REMOVE_SUB,\n  SET_AREA\n} from './types'\nimport {\n  setCurrentAction,\n  setMainAction,\n  setSubAction,\n  removeCurrentAction,\n  removeSubAction,\n  setAreaAction\n} from './actions'\nimport { AppType } from '../'\n\nconst initialState: CurrentNumberState = {\n  main: -1,\n  sub: null,\n  area: {\n    start: -1,\n    end: -1\n  }\n}\n\nexport const setCurrent = (main: number, sub: number | null): AppType => async dispatch => {\n  dispatch(setCurrentAction(main, sub))\n}\n\nexport const setMain = (main: number): AppType => async dispatch => {\n  dispatch(setMainAction(main))\n}\n\nexport const setSub = (sub: number): AppType => async dispatch => {\n  dispatch(setSubAction(sub))\n}\n\nexport const removeCurrent = (): AppType => async dispatch => {\n  dispatch(removeCurrentAction())\n}\n\nexport const removeSub = (): AppType => async dispatch => {\n  dispatch(removeSubAction())\n}\n\nconst reducer = (state = initialState, action: CurrentNumberActionType): CurrentNumberState => {\n  switch(action.type) {\n  case SET_CURRENT:\n    return {\n      ...state,\n      main: action.payload.main,\n      sub: action.payload.sub\n    }\n  case SET_MAIN:\n    return {\n      ...state,\n      main: action.payload.main,\n      sub: state.sub\n    }\n  case SET_SUB:\n    return {\n      ...state,\n      main: state.main,\n      sub: action.payload.sub\n    }\n  case REMOVE_CURRENT:\n    return {\n      ...state,\n      main: -1\n    }\n  case REMOVE_SUB:\n    return {\n      ...state,\n      sub: null\n    }\n  case SET_AREA:\n    return {\n      ...state,\n      area: {\n        start: action.payload.start,\n        end: action.payload.end\n      }\n    }\n  default:\n    return state\n  }\n}\n\nexport default reducer","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/listReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/runningReducer.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/hooks/index.ts",["167","168","169"],"import { useState, useEffect, useRef} from 'react'\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport const useContainerDimensions = (myRef: React.MutableRefObject<HTMLDivElement | null>): Dimensions => {\n  const getDimensions = (): Dimensions => ({\n    width: myRef.current?.offsetWidth || 0,\n    height: myRef.current?.offsetHeight || 0\n  })\n\n  const [dimensions, setDimensions] = useState<Dimensions>({ width: 0, height: 0 })\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions(getDimensions())\n    }\n\n    if (myRef.current)\n      setDimensions(getDimensions())\n\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [myRef])\n\n  return dimensions\n\n}\n\n// https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n// Used to get the previous value of an object\nexport const usePrevious = (value: any): any => {\n  const prevChildrenRef = useRef()\n\n  useEffect(() => {\n    prevChildrenRef.current = value\n  }, [value])\n\n  return prevChildrenRef.current\n}","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/AnimateBars.tsx",["170","171","172"],"\n/*\n  Based on https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba by Tara Ojo\n  Used to animate changing bar positions\n*/\n\nimport React, { useState, useEffect, useLayoutEffect, ReactChildren } from 'react'\nimport { usePrevious } from '../../hooks'\nimport calculateBoundingBoxes from '../../utils/calculateBoundingBoxes'\n\nimport { AnimationChild, DOMRectDict } from '../../types'\n\nconst AnimateBars: React.FC<any> = ({ children }: { children: any}) => {\n  const [boundingBox, setBoundingBox] = useState<DOMRectDict | null>({})\n  const [prevBoundingBox, setPrevBoundingBox] = useState<DOMRectDict | null>({})\n  const prevChildren = usePrevious(children)\n\n  // Fix bounding boxes updating when list size updates\n  useLayoutEffect(() => {\n    const newBoundingBox = calculateBoundingBoxes(children)\n    setBoundingBox(newBoundingBox)\n  }, [children])\n\n  useLayoutEffect(() => {\n    const prevBoundingBox = calculateBoundingBoxes(prevChildren)\n    setPrevBoundingBox(prevBoundingBox)\n  }, [prevChildren])\n\n  useEffect(() => {\n    if (!prevBoundingBox || !boundingBox || Object.keys(prevBoundingBox).length < Object.keys(boundingBox).length)\n      return\n\n    const hasPrevBoundingBox = Object.keys(prevBoundingBox).length\n\n    if (hasPrevBoundingBox) {\n      React.Children.forEach(children, (child: AnimationChild) => {\n        const domNode = child.ref.current\n        const firstBox = prevBoundingBox[child.key]\n        const lastBox = boundingBox[child.key]\n        if (!firstBox || !lastBox)\n          return\n\n        const changeInX = firstBox.left - lastBox.left\n\n\n        if (changeInX) {\n          requestAnimationFrame(() => {\n            // Before DOM paints, invert child to old position\n            // Maybe longer animation time?\n            // Reduce speed of sorting so the animation shows\n            domNode.style.transform = `translateX(${changeInX}px)`\n            domNode.style.transition = `transform 0ms`\n\n            requestAnimationFrame(() => {\n              // After previous frame, remove the transition to play the animation\n              domNode.style.transform = ''\n              domNode.style.transition = 'transform 200ms'\n            })\n          })\n        }\n      })\n    }\n  }, [boundingBox, prevBoundingBox, children])\n\n  return children\n\n}\n\nexport default AnimateBars\n","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/ListSizeSlider.tsx",["173","174","175","176"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Slider } from 'antd'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nimport { fetchNewList } from '../store/list/listReducer'\n\nimport { isRunning } from '../utils'\nimport { setWaiting } from '../store/running/runningReducer'\n\ntype SliderProps = {\n  breakpoint: boolean\n}\n\nconst ListSizeSlider = ({ breakpoint }: SliderProps) => {\n  const dispatch = useDispatch()\n  const maxSliderValue = breakpoint ? 20 : 40\n\n  const listSize = useSelector((state: RootState) => state.numberList.size)\n  const visualizationStatus = useSelector((state: RootState) => state.running.state)\n\n  const [sliderValue, setSliderValue] = useState(listSize)\n \n  useEffect(() => {\n    dispatch(setWaiting());\n    dispatch(fetchNewList(maxSliderValue/2))\n    setSliderValue(maxSliderValue/2)\n  }, [maxSliderValue])\n\n  useEffect(() => {\n    if (visualizationStatus === 'finished') {\n      dispatch(setWaiting())\n      dispatch(fetchNewList(listSize))\n    }\n    \n    \n  }, [listSize])\n\n  const onSliderChange = (value: any) => {\n    if (typeof value !== 'number' || isNaN(Number(value)))\n      return\n    setSliderValue(value)\n  }\n\n  const setNewListSize = (value: any) => {\n    if (typeof value !== 'number')\n      return\n    if (value > maxSliderValue)\n      value = maxSliderValue\n    dispatch(fetchNewList(value))\n  }\n\n  return (\n    <div>\n      <Slider\n        min={3}\n        max={ maxSliderValue }\n        onChange={onSliderChange}\n        onAfterChange={setNewListSize}\n        value={sliderValue}\n        tipFormatter={null}\n        disabled={isRunning() === 'running'}\n      />\n    </div>\n  )\n}\n\nexport default ListSizeSlider","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Visualization/Bar.tsx",["177"],"import React, { MutableRefObject } from 'react'\n\ntype Props = {\n  height: number;\n  width: number;\n  main: boolean;\n  sub: boolean;\n  area: boolean;\n}\n\ntype Ref = HTMLDivElement\n\ninterface Bar {\n  height: number;\n  width: number;\n  main: boolean;\n  sub: boolean;\n  area: boolean;\n}\n\n// Renders a bar to represent a number in the list\nconst Bar: React.FC<Bar> = React.forwardRef<Ref, Props>((props: Props, ref) => {\n\n  const normal = !props.main && !props.sub\n  const maxHeight = 30\n  const style = {\n    height: `${maxHeight+1}em`,\n    width: `${props.width}%`,\n    background: props.area ? \"rgb(170, 182, 193, 0.6)\" : 'transparent',\n    \n  }\n  const barStyle = {\n    height: `${maxHeight*props.height}em`,\n    maxHeight: `${maxHeight}em`,\n    width: 'auto',\n    background: normal ? '#f0f2f5' : props.main ? '#FF7A32' : \n    props.sub ? '#2EF550' : '#f0f2f5',\n    zIndex: 50,\n    borderStyle: 'solid',\n    borderWidth: '0.2em',\n    borderColor: '#1890ff',//'#f0f2f5',\n    margin: '0.1em',\n    opacity: '100%'\n  }\n\n  return (\n    <div style={style} >\n      <div style={barStyle} ref={ref} />\n    </div>\n  )\n})\n\n// Eslint is being a douche\nBar.displayName = 'Bar'\n\nexport default Bar\n","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/currentNumber/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/running/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/lists.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/store/list/actions.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/calculateBoundingBoxes.ts",["178"],"/*\n  Based on https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba by Tara Ojo\n  Calculates the bounding boxes of elements given to it\n*/\n\nimport React, { ReactChildren } from 'react'\n\nimport { AnimationChild, AnimationChildren, DOMRectDict } from '../types'\n\nconst calculateBoundingBoxes = (children: AnimationChildren): DOMRectDict | null => {\n  const boundingBoxes: DOMRectDict = {}\n\n  React.Children.forEach(children, (child: AnimationChild) => {\n    if (!child.ref.current)\n      return null\n    const domNode = child.ref.current\n    const nodeBoundingBox = domNode.getBoundingClientRect()\n\n\n    boundingBoxes[child.key] = nodeBoundingBox\n  })\n\n  return boundingBoxes\n}\n\nexport default calculateBoundingBoxes","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/constants.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/types.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/utils/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/AlgorithmRunner/algorithmRunner.ts",["179"],"import {\n  BubbleSort,\n  QuickSort,\n  BogoSort,\n  InsertionSort,\n  StalinSort,\n  MergeSort,\n  Algorithms\n} from './types'\n\nimport * as a from '../../Algorithms'\n\nconst algorithmRunner = async (algorithm: Algorithms) =>  {  \n    switch (algorithm) {\n    case BubbleSort:\n      return await a.bubbleSort()\n    case QuickSort:\n      return await a.quickSort()\n    case BogoSort:\n      return await a.bogoSort()\n    case InsertionSort:\n      return await a.insertionSort()\n    case StalinSort:\n      return await a.stalinSort()\n    case MergeSort:\n      return await a.mergeSort()\n    default:\n      return\n    }\n}\n\nexport default algorithmRunner","/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/index.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/mergeSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/stalinSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bogoSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/quickSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/bubbleSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Algorithms/insertionSort.ts",[],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/Components/Description.tsx",["180","181","182","183","184"],"/home/jere/Documents/fullstack_open/Projekti/AlgoVis/frontend/src/services/descriptions.ts",["185"],"import axios from 'axios'\nimport {apiBaseUrl} from '../constants'\n\nconst fetchDescription = async (algorithmName: string) => {\n\tconst { data: desc } = await axios.post(`${apiBaseUrl}/description`, {algorithm: algorithmName})\n\treturn desc\n}\n\nexport default { fetchDescription }",{"ruleId":"186","severity":1,"message":"187","line":4,"column":3,"nodeType":"188","messageId":"189","endLine":4,"endColumn":7},{"ruleId":"186","severity":1,"message":"190","line":7,"column":3,"nodeType":"188","messageId":"189","endLine":7,"endColumn":9},{"ruleId":"186","severity":1,"message":"191","line":11,"column":9,"nodeType":"188","messageId":"189","endLine":11,"endColumn":14},{"ruleId":"186","severity":1,"message":"192","line":13,"column":9,"nodeType":"188","messageId":"189","endLine":13,"endColumn":15},{"ruleId":"186","severity":1,"message":"193","line":36,"column":9,"nodeType":"188","messageId":"189","endLine":36,"endColumn":30},{"ruleId":"186","severity":1,"message":"194","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"195","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"196","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":23},{"ruleId":"186","severity":1,"message":"195","line":1,"column":25,"nodeType":"188","messageId":"189","endLine":1,"endColumn":34},{"ruleId":"186","severity":1,"message":"194","line":1,"column":36,"nodeType":"188","messageId":"189","endLine":1,"endColumn":44},{"ruleId":"186","severity":1,"message":"197","line":11,"column":3,"nodeType":"188","messageId":"189","endLine":11,"endColumn":13},{"ruleId":"186","severity":1,"message":"198","line":12,"column":3,"nodeType":"188","messageId":"189","endLine":12,"endColumn":17},{"ruleId":"186","severity":1,"message":"199","line":17,"column":34,"nodeType":"188","messageId":"189","endLine":17,"endColumn":44},{"ruleId":"200","severity":1,"message":"201","line":26,"column":20,"nodeType":"202","messageId":"203","endLine":26,"endColumn":51},{"ruleId":"204","severity":1,"message":"205","line":60,"column":31,"nodeType":"206","messageId":"207","endLine":60,"endColumn":34,"suggestions":"208"},{"ruleId":"186","severity":1,"message":"209","line":17,"column":3,"nodeType":"188","messageId":"189","endLine":17,"endColumn":16},{"ruleId":"200","severity":1,"message":"210","line":37,"column":29,"nodeType":"188","messageId":"211","endLine":37,"endColumn":39},{"ruleId":"204","severity":1,"message":"205","line":37,"column":36,"nodeType":"206","messageId":"207","endLine":37,"endColumn":39,"suggestions":"212"},{"ruleId":"204","severity":1,"message":"205","line":37,"column":42,"nodeType":"206","messageId":"207","endLine":37,"endColumn":45,"suggestions":"213"},{"ruleId":"186","severity":1,"message":"214","line":7,"column":55,"nodeType":"188","messageId":"189","endLine":7,"endColumn":68},{"ruleId":"204","severity":1,"message":"205","line":13,"column":29,"nodeType":"206","messageId":"207","endLine":13,"endColumn":32,"suggestions":"215"},{"ruleId":"204","severity":1,"message":"205","line":13,"column":63,"nodeType":"206","messageId":"207","endLine":13,"endColumn":66,"suggestions":"216"},{"ruleId":"186","severity":1,"message":"196","line":1,"column":38,"nodeType":"188","messageId":"189","endLine":1,"endColumn":44},{"ruleId":"200","severity":1,"message":"201","line":16,"column":24,"nodeType":"202","messageId":"203","endLine":16,"endColumn":56},{"ruleId":"204","severity":1,"message":"205","line":40,"column":34,"nodeType":"206","messageId":"207","endLine":40,"endColumn":37,"suggestions":"217"},{"ruleId":"204","severity":1,"message":"205","line":46,"column":34,"nodeType":"206","messageId":"207","endLine":46,"endColumn":37,"suggestions":"218"},{"ruleId":"186","severity":1,"message":"219","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"214","line":6,"column":17,"nodeType":"188","messageId":"189","endLine":6,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":13,"column":25,"nodeType":"202","messageId":"203","endLine":13,"endColumn":57},{"ruleId":"186","severity":1,"message":"220","line":1,"column":38,"nodeType":"188","messageId":"189","endLine":1,"endColumn":50},{"ruleId":"186","severity":1,"message":"221","line":1,"column":52,"nodeType":"188","messageId":"189","endLine":1,"endColumn":61},{"ruleId":"186","severity":1,"message":"222","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"200","severity":1,"message":"201","line":12,"column":21,"nodeType":"202","messageId":"203","endLine":12,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":32,"column":28,"nodeType":"206","messageId":"207","endLine":32,"endColumn":31,"suggestions":"223"},{"ruleId":"200","severity":1,"message":"201","line":4,"column":26,"nodeType":"202","messageId":"203","endLine":4,"endColumn":58},"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Title' is assigned a value but never used.","'Header' is assigned a value but never used.","'algorithm' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Algorithms' is defined but never used.","'AlgorithmTypes' is defined but never used.","'setWaiting' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["224","225"],"'setAreaAction' is defined but never used.","Argument 'value' should be typed with a non-any type.","anyTypedArg",["226","227"],["228","229"],"'ReactChildren' is defined but never used.",["230","231"],["232","233"],["234","235"],["236","237"],"'MutableRefObject' is defined but never used.","'ReactElement' is defined but never used.","'ReactHTML' is defined but never used.","'useDispatch' is defined but never used.",["238","239"],{"messageId":"240","fix":"241","desc":"242"},{"messageId":"243","fix":"244","desc":"245"},{"messageId":"240","fix":"246","desc":"242"},{"messageId":"243","fix":"247","desc":"245"},{"messageId":"240","fix":"248","desc":"242"},{"messageId":"243","fix":"249","desc":"245"},{"messageId":"240","fix":"250","desc":"242"},{"messageId":"243","fix":"251","desc":"245"},{"messageId":"240","fix":"252","desc":"242"},{"messageId":"243","fix":"253","desc":"245"},{"messageId":"240","fix":"254","desc":"242"},{"messageId":"243","fix":"255","desc":"245"},{"messageId":"240","fix":"256","desc":"242"},{"messageId":"243","fix":"257","desc":"245"},{"messageId":"240","fix":"258","desc":"242"},{"messageId":"243","fix":"259","desc":"245"},"suggestUnknown",{"range":"260","text":"261"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"260","text":"262"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"263","text":"261"},{"range":"263","text":"262"},{"range":"264","text":"261"},{"range":"264","text":"262"},{"range":"265","text":"261"},{"range":"265","text":"262"},{"range":"266","text":"261"},{"range":"266","text":"262"},{"range":"267","text":"261"},{"range":"267","text":"262"},{"range":"268","text":"261"},{"range":"268","text":"262"},{"range":"269","text":"261"},{"range":"269","text":"262"},[1738,1741],"unknown","never",[944,947],[950,953],[431,434],[465,468],[1102,1105],[1248,1251],[846,849]]
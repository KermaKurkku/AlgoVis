{"version":3,"sources":["Components/Visualization/Bar.tsx","Components/Bars.tsx","store/list/types.ts","store/list/actions.ts","constants.ts","services/lists.ts","services/AlgorithmRunner/types.ts","store/list/listReducer.ts","Components/ListSizeSlider.tsx","store/currentNumber/types.ts","store/currentNumber/actions.ts","store/currentNumber/currentNumberReducer.ts","store/index.ts","utils/stillRunning.ts","Algorithms/bubbleSort.ts","Algorithms/quickSort.ts","Algorithms/bogoSort.ts","services/AlgorithmRunner/algorithmRunner.ts","App.tsx","index.tsx"],"names":["Bar","height","width","main","sub","style","maxHeight","background","zIndex","borderStyle","borderWidth","borderColor","Bars","listSize","useSelector","state","numberList","size","list","selected","currentNumber","display","map","b","i","ADD_LIST","CHANGE_SIZE","setNewAction","type","payload","apiBaseUrl","AlgorithmTypes","fetchNew","a","axios","get","data","initialState","reducer","action","ListSizeSlider","dispatch","useDispatch","useState","sliderValue","setSliderValue","useEffect","listService","newList","fetchNewList","min","max","onChange","value","isNaN","Number","onAfterChange","console","log","changeListSize","tipFormatter","SET_CURRENT","SET_MAIN","SET_SUB","REMOVE_CURRENT","REMOVE_SUB","setMainAction","setSubAction","removeCurrentAction","rootReducer","combineReducers","listReducer","currentNumberReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","stillRunning","getState","timeoutLoop","loop","setTimeout","bubbleSort","length","wait","ms","Promise","resolve","partition","A","low","high","pivot","j","sort","p","quickSort","rerun","bogoSort","runAlgorithm","Title","Typography","SubMenu","Menu","Header","Layout","Footer","Sider","Content","App","algorithmOptions","Object","values","selectedAlgorithm","setSelectedAlgorithm","startVisualization","className","theme","mode","defaultSelectedKeys","Item","margin","block","onClick","level","color","borderRight","defaultOpenKeys","event","key","title","padding","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.402382f2.chunk.js","sourcesContent":["import React from 'react'\n\ninterface Bar {\n  height: number,\n  width: number,\n  main: boolean,\n  sub: boolean\n}\n\n// Renders a bar to represent a number in the list\nconst Bar: React.FC<Bar> = ({ height, width, main, sub }: { height: number, width: number, main: boolean, sub: boolean }) => {\n  const maxHeight = 40\n  const style = {\n    height: `${maxHeight*height}em`,\n    maxHeight: `${maxHeight}em`,\n    width: `${width}%`,\n    background: main ? '#FF7A32' : sub ? '#2EF550' : '#3E54E0',\n    zIndex: 50,\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    borderColor: '#37AFED'\n  }\n\n  return <div style={style} />\n}\n\nexport default Bar","import React, { useState, useEffect } from 'react'\n\nimport Bar from './Visualization/Bar'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootState, CurrentNumberState } from '../store'\n\nconst Bars: React.FC = () => {\n  const listSize: number = useSelector((state: RootState) => state.numberList.size)\n  const list: number[] = useSelector((state: RootState) => state.numberList.list)\n  const selected: CurrentNumberState = useSelector((state: RootState) => state.currentNumber)\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {list.map((b, i) => (\n        <Bar key={b} width={100/listSize} height={b/listSize}\n        main={i === selected.main} sub={i === selected.sub} />\n      ))}\n    </div>\n  )\n}\n\nexport default Bars","export interface ListState {\n  list: number[];\n  size: number\n}\n\nexport const ADD_LIST = 'ADD_LIST'\nexport const CHANGE_SIZE = 'CHANGE_SIZE'\n\ninterface SetList {\n  type: typeof ADD_LIST;\n  payload: number[];\n}\n\ninterface ChangeListSize {\n  type: typeof CHANGE_SIZE;\n  payload: number\n}\n\nexport type ListActionType = SetList | ChangeListSize","import {\n  ListActionType,\n  ADD_LIST,\n  CHANGE_SIZE\n} from './types'\n\n\nexport const setNewAction = (list: number[]): ListActionType => {\n    return {\n      type: ADD_LIST,\n      payload: list\n    }\n}\n\nexport const changeListSizeAction = (size: number): ListActionType => {\n  return {\n    type: CHANGE_SIZE,\n    payload: size\n  }\n}","\nlet apiBaseUrl = ''\nif (process.env.NODE_ENV === 'development')\n\tapiBaseUrl = `http://localhost:3001/api`\nelse\n\tapiBaseUrl = `/api`\n\nexport {apiBaseUrl}","import axios from 'axios'\nimport { apiBaseUrl } from '../constants'\n\nconst fetchNew = async (size: number): Promise<number[]> => {\n  const { data: list } = await axios.get<number[]>(`${apiBaseUrl}/list?size=${size}`) \n  return list\n}\n\nexport default { fetchNew }","export const BubbleSort = 'BubbleSort'\nexport const QuickSort = 'QuickSort'\nexport const BogoSort = 'BogoSort'\n\nexport enum AlgorithmTypes {\n  BubbleSort = 'BubbleSort',\n  QuickSort = 'QuickSort',\n  BogoSort = 'BogoSort'\n}\n\nexport type Algorithms = typeof BubbleSort | typeof QuickSort | typeof BogoSort\n\nexport type isAlgorithm<T> = T extends 'BubbleSort' ? typeof BubbleSort : typeof QuickSort","import {\n  ListState,\n  ListActionType,\n  ADD_LIST,\n  CHANGE_SIZE\n} from './types'\nimport { setNewAction, changeListSizeAction } from './actions'\nimport { AppType } from '../'\n\nimport listService from '../../services/lists'\n\nconst initialState: ListState = {\n  list: [],\n  size: 25\n}\n\nexport const fetchNewList = (listSize: number): AppType => async dispatch => {\n  const newList: number[] = await listService.fetchNew(listSize)\n  dispatch(setNewAction(newList))\n}\n\nexport const changeListSize = (listSize: number): AppType => async dispatch => {\n  dispatch(changeListSizeAction(listSize))\n}\n\nconst reducer = (state = initialState, action: ListActionType): ListState => {\n  switch(action.type) {\n    case ADD_LIST:\n      \n      return {\n        list: [...action.payload],\n        size: state.size\n      }\n    case CHANGE_SIZE:\n      return {\n        list: state.list,\n        size: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import React, { useState, useEffect } from 'react'\nimport { Slider } from 'antd'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nimport { fetchNewList, changeListSize } from '../store/list/listReducer'\n\n\nconst ListSizeSlider: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const [sliderValue, setSliderValue] = useState(25)\n  const listSize = useSelector((state: RootState) => state.numberList.size)\n\n\tuseEffect(() => {\n    dispatch(fetchNewList(listSize))\n  }, [listSize])\n\n  const onSliderChange = (value: any) => {\n    if (typeof value !== 'number' || isNaN(Number(value)))\n      return\n    setSliderValue(value)\n  }\n\n  const setNewListSize = (value: any) => {\n    if (typeof value !== 'number')\n      return\n    if (value > 60)\n      value = 60\n    console.log('change list size', value)\n    dispatch(changeListSize(value))\n  }\n\n\treturn (\n\t\t<div>\n\t\t\t<Slider\n\t\t\t\tmin={3}\n        max={60}\n        onChange={onSliderChange}\n        onAfterChange={setNewListSize}\n        value={typeof sliderValue === 'number' ? sliderValue : 25}\n        tipFormatter={null}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default ListSizeSlider","export interface CurrentNumberState {\n  main: number | null\n  sub: number | null\n}\n\nexport const SET_CURRENT = 'SET_CURRENT'\n\nexport const SET_MAIN = 'SET_MAIN'\n\nexport const SET_SUB = 'SET_SUB'\n\nexport const REMOVE_CURRENT = 'REMOVE_CURRENT'\n\nexport const REMOVE_SUB = 'REMOVE_SUB'\n\ninterface setCurrentAction {\n  type: typeof SET_CURRENT;\n  payload: {\n    main: number,\n    sub: number | null\n  }\n}\n\ninterface setMainAction {\n  type: typeof SET_MAIN;\n  payload: {\n    main: number\n  }\n}\n\ninterface setSubAction {\n  type: typeof SET_SUB;\n  payload: {\n    sub: number\n  }\n}\n\ninterface removeCurrentAction {\n  type: typeof REMOVE_CURRENT;\n}\n\ninterface removeSubAction {\n  type: typeof REMOVE_SUB\n}\n\nexport type CurrentNumberActionType = setCurrentAction | setMainAction | setSubAction | removeCurrentAction | removeSubAction","import { CurrentNumberActionType, SET_CURRENT, SET_MAIN, SET_SUB, REMOVE_CURRENT, REMOVE_SUB } from './types'\n\nexport const setCurrentAction = (main: number, sub?: number | null): CurrentNumberActionType => {\n  return {\n    type: SET_CURRENT,\n    payload: {\n      main: main,\n      sub: sub || null\n    }\n  }\n}\n\nexport const setMainAction = (main: number): CurrentNumberActionType => {\n  return {\n    type: SET_MAIN,\n    payload: {\n      main: main,\n    }\n  }\n}\n\nexport const setSubAction = (sub: number): CurrentNumberActionType => {\n  return {\n    type: SET_SUB,\n    payload: {\n      sub: sub\n    }\n  }\n}\n\nexport const removeCurrentAction = (): CurrentNumberActionType => {\n  return {\n    type: REMOVE_CURRENT\n  }\n}\n\nexport const removeSubAction = (): CurrentNumberActionType => {\n  return {\n    type: REMOVE_SUB\n  }\n}","import {\n  CurrentNumberState,\n  CurrentNumberActionType,\n  SET_CURRENT,\n  SET_MAIN,\n  SET_SUB,\n  REMOVE_CURRENT,\n  REMOVE_SUB,\n} from './types'\nimport {\n  setCurrentAction,\n  setMainAction,\n  setSubAction,\n  removeCurrentAction,\n  removeSubAction\n} from './actions'\nimport { AppType } from '../'\n\nconst initialState: CurrentNumberState = {\n  main: null,\n  sub: null\n}\n\nexport const setCurrent = (main: number, sub: number | null): AppType => async dispatch => {\n  dispatch(setCurrentAction(main, sub))\n}\n\nexport const setMain = (main: number): AppType => async dispatch => {\n  dispatch(setMainAction(main))\n}\n\nexport const setSub = (sub: number): AppType => async dispatch => {\n  dispatch(setSubAction(sub))\n}\n\nexport const removeCurrent = ():AppType => async dispatch => {\n  dispatch(removeCurrentAction())\n}\n\nexport const removeSub = ():AppType => async dispatch => {\n  dispatch(removeSubAction())\n}\n\nconst reducer = (state = initialState, action: CurrentNumberActionType): CurrentNumberState => {\n  switch(action.type) {\n    case SET_CURRENT:\n      return {\n        main: action.payload.main,\n        sub: action.payload.sub\n      }\n    case SET_MAIN:\n      return {\n        main: action.payload.main,\n        sub: state.sub\n      }\n    case SET_SUB:\n      return {\n        main: state.main,\n        sub: action.payload.sub\n      }\n    case REMOVE_CURRENT:\n      return {\n        main: null,\n        sub: null,\n      }\n    case REMOVE_SUB:\n      return {\n        sub: null,\n        ...state\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { Action } from 'redux'\nimport thunk, { ThunkAction } from 'redux-thunk'\nimport listReducer from './list/listReducer'\nimport currentNumberReducer from './currentNumber/currentNumberReducer'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst rootReducer = combineReducers({\n  numberList: listReducer,\n  currentNumber: currentNumberReducer\n})\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      thunk\n    )\n  )\n)\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport * from './currentNumber/types'\nexport * from './list/types'\n\nexport type AppType<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n\nexport default store","import state from '../store'\n\nconst stillRunning = (): boolean => {\n\tif (state.getState().currentNumber.main == null)\n\t\treturn false\n\telse\n\t\treturn true\n}\n\nexport default stillRunning","import { removeCurrentAction, setMainAction } from '../store/currentNumber/actions'\nimport { setNewAction } from '../store/list/actions'\n\nimport store from '../store'\n\nimport stillRunning from '../utils/stillRunning'\n\nconst timeoutLoop = (i: number, loop: number): void => {\n  \n  const list: number[] = [...store.getState().numberList.list]\n\n  setTimeout(() => {\n    if (!stillRunning())\n    return\n    if (list[i] > list[i + 1]) {\n      [list[i], list[i + 1]] = [list[i + 1], list[i]]\n      store.dispatch(setNewAction(list))\n    }\n    i++\n    store.dispatch(setMainAction(i))\n    if (i === (loop-1)) {\n      timeoutLoop(-1, loop - 1)\n    }else if (loop == 0) {\n      store.dispatch(removeCurrentAction())\n    }else  {\n      timeoutLoop(i, loop)\n    }\n  }, 80)\n}\n\nexport const bubbleSort = (): void => {\n  const list: number[] = [...store.getState().numberList.list]\n  const i = 0\n  store.dispatch(setMainAction(0))\n  timeoutLoop(i, list.length)\n}","import { setMainAction, setSubAction, removeCurrentAction } from '../store/currentNumber/actions'\nimport { setNewAction } from '../store/list/actions'\n\nimport store from '../store'\n\nimport stillRunning from '../utils/stillRunning'\n\nconst wait = async (ms: number): Promise<void> => await new Promise(resolve => setTimeout(resolve, ms))\n\nconst partition = async (A: number[], low: number, high: number): Promise<number> => {\n  \n  \n  const list: number[] = [...A]\n  const pivot: number = list[high]\n  store.dispatch(setMainAction(high))\n  let i = low\n  \n  if (!pivot)\n    return -1\n  for (let j = low; j < high; j++) {\n    if (!stillRunning())\n      return -1\n    store.dispatch(setSubAction(j))\n\n    await wait(80) // Wait for given amount of ms\n\n    if (list[j] < pivot) {\n      [list[i], list[j]] = [list[j], list[i]]\n      store.dispatch(setNewAction(list))\n      i++\n    }\n  }\n  [list[i], list[high]] = [list[high], list[i]]\n  store.dispatch(setNewAction(list))\n  return i\n}\n\nconst sort = async (low: number, high: number): Promise<void> => {\n  if (!stillRunning())\n    return\n\n  const list = [...store.getState().numberList.list]\n  if (low < high) {\n    const p: number = await partition(list, low, high)\n    \n    if (p === -1)\n      return\n    await sort(low, p - 1)\n    await sort(p + 1, high)\n  }\n  \n}\n\nexport const quickSort = async (): Promise<void> => {\n  const list = [...store.getState().numberList.list]\n  console.log(list)\n  store.dispatch(setMainAction(-1))\n  await sort(0, list.length-1)\n  store.dispatch(removeCurrentAction())\n}","import { setMainAction, removeCurrentAction } from '../store/currentNumber/actions'\n\nimport { setNewAction } from '../store/list/actions'\n\nimport listService from '../services/lists'\n\nimport store from '../store'\n\nimport stillRunning from '../utils/stillRunning'\n\nconst wait = async (ms: number): Promise<void> => await new Promise(resolve => setTimeout(resolve, ms))\n\n\nconst sort = async (): Promise<void> => {\n  \n  const list: number[] = [...store.getState().numberList.list]\n  const listSize: number = store.getState().numberList.size\n  let rerun = false\n\n  for (let i = 0; i < listSize - 1; i++) {\n    await wait(100)\n    if (!stillRunning())\n      return\n    store.dispatch(setMainAction(i))\n    if (list[i] > list[i + 1]) {\n      rerun = !rerun\n      break\n    }\n  }\n\n  if (rerun) {\n    const newList = await listService.fetchNew(listSize)\n    store.dispatch(setNewAction(newList))\n    store.dispatch(setMainAction(-1))\n    await wait(100)\n    return await sort()\n  }\n  store.dispatch(removeCurrentAction())\n  return \n}\n\nexport const bogoSort = async (): Promise<void> => {\n  store.dispatch(setMainAction(-1))\n  await sort()\n  \n}\n","import {\n  BubbleSort,\n  QuickSort,\n  BogoSort,\n  Algorithms\n} from './types'\n\nimport {\n  quickSort,\n  bubbleSort,\n  bogoSort\n} from '../../Algorithms'\n\nexport const runAlgorithm = async (type: Algorithms) => {\n  console.log(type)\n  switch (type) {\n    case BubbleSort:\n      return await bubbleSort()\n    case QuickSort:\n      return await quickSort()\n    case BogoSort:\n      return await bogoSort()\n    default:\n      return\n  }\n}","import React, { useState } from 'react'\nimport {\n  Select,\n  Layout,\n  Typography,\n  Menu,\n  Button\n} from 'antd'\n\nconst { Title } = Typography\nconst { SubMenu } = Menu\nconst { Header, Footer, Sider, Content } = Layout\n\nimport Bars from './Components/Bars'\nimport ListSizeSlider from './Components/ListSizeSlider'\n\nimport stillRunning from './utils/stillRunning'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeCurrent } from './store/currentNumber/currentNumberReducer'\n\n// Figure out webworkers at some point maybe?\n//import SortWorker from 'comlink-loader!./worker'\n\nimport {\n  runAlgorithm,\n  Algorithms,\n  AlgorithmTypes\n} from './services/AlgorithmRunner'\nimport { RootState } from './store'\n\nconst App: React.FC = () => {\n  const algorithmOptions: string[] = Object.values(AlgorithmTypes) as string[]\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<string>(algorithmOptions[0])\n\n  const dispatch = useDispatch()\n\n  const main = useSelector((state: RootState) => state.currentNumber.main)\n\n  const startVisualization = async (): Promise<void> => {\n    \n    const selected: Algorithms =  selectedAlgorithm as Algorithms\n    await runAlgorithm(selected)\n  }\n\n  const stopVisualization = (): void => {\n    console.log('Stop visualizing')\n    dispatch(removeCurrent())\n    setTimeout(() => {\n      stillRunning()\n    }, 20);\n  }\n\n  const menuOnClick = (event: any)  => {\n    console.log(event)\n    setSelectedAlgorithm(event.key)\n  }\n  console.log(stillRunning())\n\n  return (\n    <div>\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">AlgoVis</Menu.Item>\n          </Menu>\n        </Header>\n        <Layout style={{ margin: '0 5em 0 5em'}}>\n          <Sider width={'20%'} className=\"site-layout-background\">\n\n            {main === null ? \n              <Button type='primary' block size='large' style={{\n                  margin: '1em auto',\n                }}\n                onClick={startVisualization}\n              >Visualize</Button> :\n              <Button type='primary' block size='large' style={{\n                  margin: '1em auto'\n                }}\n                onClick={stopVisualization}\n              >Stop visualization</Button>\n            }\n\n            <Title level={2} style={{ color: 'white', margin: '0,5em auto'}}>Select list size</Title>\n\n            <Menu\n              mode=\"inline\"\n              style={{ borderRight: 0 }}\n              defaultOpenKeys={['slider', 'sub2']}\n              defaultSelectedKeys={[algorithmOptions[0]]}\n              onClick={menuOnClick}\n            >\n              <Menu.Item key='slider' title={\n                <p>Select list size</p>\n              }>\n                <ListSizeSlider />\n              </Menu.Item>\n              <SubMenu\n                key='sub2'\n                title=\"Select algorithm\"\n              >\n                {algorithmOptions.map(a => \n                  <Menu.Item key={a} >{a}</Menu.Item>  \n                )}\n              </SubMenu>\n            </Menu>\n            \n          </Sider>\n          <Layout style={{ padding: '0 10em em'}}>\n            <Content className=\"site-layout-background\"\n              style={{\n                padding: 24,\n                margin: 0,\n              }}>\n              <Bars />\n            </Content>\n          </Layout>\n        </Layout>\n        <Footer style={{ textAlign: 'center'}}>AlgoVis algorithm visualizer @2020 Created by Jere Salmensaari</Footer>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport 'antd/dist/antd.css'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}
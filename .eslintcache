[{"/home/jere/Documents/fullstack_open/algovis/src/index.tsx":"1","/home/jere/Documents/fullstack_open/algovis/src/App.tsx":"2","/home/jere/Documents/fullstack_open/algovis/src/utils/listGenerator.ts":"3","/home/jere/Documents/fullstack_open/algovis/src/Components/Bar.tsx":"4"},{"size":176,"mtime":1609251618226,"results":"5","hashOfConfig":"6"},{"size":1281,"mtime":1609252926752,"results":"7","hashOfConfig":"6"},{"size":629,"mtime":1609251470878,"results":"8","hashOfConfig":"6"},{"size":318,"mtime":1609252241659,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hlrkoj",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jere/Documents/fullstack_open/algovis/src/index.tsx",[],"/home/jere/Documents/fullstack_open/algovis/src/App.tsx",["18"],"/home/jere/Documents/fullstack_open/algovis/src/utils/listGenerator.ts",[],"/home/jere/Documents/fullstack_open/algovis/src/Components/Bar.tsx",["19"],{"ruleId":"20","severity":1,"message":"21","line":11,"column":34,"nodeType":"22","messageId":"23","endLine":11,"endColumn":37,"suggestions":"24"},{"ruleId":"25","severity":1,"message":"26","line":3,"column":13,"nodeType":"27","messageId":"28","endLine":3,"endColumn":70},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["29","30"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",{"messageId":"31","fix":"32","desc":"33"},{"messageId":"34","fix":"35","desc":"36"},"suggestUnknown",{"range":"37","text":"38"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"37","text":"39"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[371,374],"unknown","never"]